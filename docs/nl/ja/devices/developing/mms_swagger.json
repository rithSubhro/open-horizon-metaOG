{
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "schemes": [
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "description": "これはエッジ同期サービスのメイン・パッケージです",
    "title": "エッジ同期サービス",
    "version": "0.0.1"
  },
  "host": "localhost",
  "basePath": "/",
  "paths": {
    "/api/v1/destinations/{orgID}": {
      "get": {
        "description": "CSS に登録されている、組織の宛先、つまり (orgID に属している)  ESS ノードのリスト提供します。\nこれは CSS のみの API です。",
        "produces": [
          "application/json",
          "text/plain"
        ],
        "tags": [
          "CSS"
        ],
        "summary": "すべての既知の宛先をリストします。",
        "operationId": "handleDestinations",
        "parameters": [
          {
            "type": "string",
            "description": "返される宛先の orgID。",
            "name": "orgID",
            "in": "パス",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "宛先応答",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Destination"
              }
            }
          },
          "404": {
            "description": "宛先が見つからない",
            "schema": {
              "type": "string"
            }
          },
          "500": {
            "description": "宛先を取得できませんでした",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/api/v1/destinations/{orgID}/{destType}/{destID}/objects": {
      "get": {
        "description": "宛先 ESS ノードによって使用中のオブジェクトのリストを提供します。\nこれは CSS のみの API です。",
        "produces": [
          "application/json",
          "text/plain"
        ],
        "tags": [
          "CSS"
        ],
        "summary": "宛先によって使用中のすべてのオブジェクトをリストします。",
        "operationId": "handleDestinationObjects",
        "parameters": [
          {
            "type": "string",
            "description": "オブジェクトを取得する対象である宛先の orgID。",
            "name": "orgID",
            "in": "パス",
            "required": true
          },
          {
            "type": "string",
            "description": "オブジェクトを取得する対象である宛先の destType。",
            "name": "destType",
            "in": "パス",
            "required": true
          },
          {
            "type": "string",
            "description": "オブジェクトを取得する対象である宛先の destID。",
            "name": "destID",
            "in": "パス",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "オブジェクト応答",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ObjectStatus"
              }
            }
          },
          "404": {
            "description": "オブジェクトが見つかりません",
            "schema": {
              "type": "string"
            }
          },
          "500": {
            "description": "オブジェクトを取得できませんでした",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/api/v1/health": {
      "get": {
        "description": "同期サービス・ノードの正常性状況を取得します。",
        "produces": [
          "application/json",
          "text/plain"
        ],
        "tags": [
          "CSS",
          "ESS"
        ],
        "summary": "同期サービス・ノードの正常性状況を取得します。",
        "operationId": "handleHealth",
        "parameters": [
          {
            "type": "ブール値",
            "description": "詳細な正常性状況を含めるかどうか。",
            "name": "details",
            "in": "照会"
          }
        ],
        "responses": {
          "200": {
            "description": "正常性状況",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/healthReport"
              }
            }
          },
          "500": {
            "description": "正常性状況を送信できませんでした。",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/api/v1/objects/{objectType}": {
      "get": {
        "description": "指定したオブジェクト・タイプのオブジェクトを取得します。 すべてのオブジェクトを取得するか、処理待ち (未コンシューム) の更新があるオブジェクトのみを取得します。\nアプリケーションで後者の API を定期的に起動して更新があるかどうかをチェックするのが典型的です (代替方法は、Webhook を使用することです)。",
        "produces": [
          "application/json",
          "text/plain"
        ],
        "tags": [
          "ESS"
        ],
        "summary": "指定したタイプのオブジェクトを取得します。",
        "operationId": "handleListObjects",
        "parameters": [
          {
            "type": "string",
            "description": "返されるオブジェクトのオブジェクト・タイプ",
            "name": "objectType",
            "in": "パス",
            "required": true
          },
          {
            "type": "ブール値",
            "description": "更新されたオブジェクトのみを返す場合、アプリケーションによって受け取り済みであるとマーク付けられたオブジェクトを含むかどうか",
            "name": "received",
            "in": "照会"
          }
        ],
        "responses": {
          "200": {
            "description": "更新された更新応答",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/MetaData"
              }
            }
          },
          "404": {
            "description": "更新されたオブジェクトが見つかりません",
            "schema": {
              "type": "string"
            }
          },
          "500": {
            "description": "更新されたオブジェクトを取得できませんでした",
            "schema": {
              "type": "string"
            }
          }
        }
      },
      "put": {
        "description": "指定したオブジェクト・タイプの Webhook を登録または削除します。\n指定したオブジェクト・タイプのオブジェクトの更新についての通知を処理するために Webhook が使用されます。",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "text/plain"
        ],
        "tags": [
          "ESS"
        ],
        "summary": "Webhook を登録または削除します。",
        "operationId": "handleWebhook",
        "parameters": [
          {
            "type": "string",
            "description": "Webhook のオブジェクトのオブジェクト・タイプ。",
            "name": "objectType",
            "in": "パス",
            "required": true
          },
          {
            "description": "Webhook のデータ",
            "name": "payload",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/webhookUpdate"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Webhook は登録/削除されました",
            "schema": {
              "type": "string"
            }
          },
          "500": {
            "description": "Webhook のデータを更新できませんでした",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/api/v1/objects/{objectType}/{objectID}": {
      "get": {
        "description": "指定したオブジェクト・タイプおよびオブジェクト ID のオブジェクトのメタデータを取得します。\nメタデータはオブジェクトにデータが含まれているかどうかを示します。そのデータは後で適切な API を使用して取得できます。",
        "produces": [
          "application/json",
          "text/plain"
        ],
        "tags": [
          "ESS"
        ],
        "summary": "オブジェクトを取得します。",
        "operationId": "handleGetObject",
        "parameters": [
          {
            "type": "string",
            "description": "返されるオブジェクトのオブジェクト・タイプ",
            "name": "objectType",
            "in": "パス",
            "required": true
          },
          {
            "type": "string",
            "description": "返されるオブジェクトのオブジェクト ID",
            "name": "objectID",
            "in": "パス",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "オブジェクト応答",
            "schema": {
              "$ref": "#/definitions/MetaData"
            }
          },
          "404": {
            "description": "オブジェクトが見つかりません",
            "schema": {
              "type": "string"
            }
          },
          "500": {
            "description": "オブジェクトを取得できませんでした",
            "schema": {
              "type": "string"
            }
          }
        }
      },
      "put": {
        "description": "指定したオブジェクト・タイプおよびオブジェクト ID のオブジェクトを更新/作成します。\n同じタイプおよび ID のオブジェクトが存在する場合はそのオブジェクトが更新され、それ以外の場合は新規オブジェクトが作成されます。",
        "produces": [
          "text/plain"
        ],
        "tags": [
          "ESS"
        ],
        "summary": "オブジェクトを更新/作成します。",
        "operationId": "handleUpdateObject",
        "parameters": [
          {
            "type": "string",
            "description": "更新/作成するオブジェクトのオブジェクト・タイプ",
            "name": "objectType",
            "in": "パス",
            "required": true
          },
          {
            "type": "string",
            "description": "更新/作成するオブジェクトのオブジェクト ID",
            "name": "objectID",
            "in": "パス",
            "required": true
          },
          {
            "name": "payload",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/objectUpdate"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "オブジェクトは更新されました",
            "schema": {
              "type": "string"
            }
          },
          "500": {
            "description": "オブジェクトを更新/作成できませんでした",
            "schema": {
              "type": "string"
            }
          }
        }
      },
      "delete": {
        "description": "指定したオブジェクト・タイプおよびオブジェクト ID のオブジェクトを削除します。\nオブジェクトの宛先に、オブジェクトが削除されたことが通知されます。",
        "produces": [
          "text/plain"
        ],
        "tags": [
          "ESS"
        ],
        "summary": "オブジェクトを削除します。",
        "operationId": "handleDeleteObject",
        "parameters": [
          {
            "type": "string",
            "description": "削除するオブジェクトのオブジェクト・タイプ",
            "name": "objectType",
            "in": "パス",
            "required": true
          },
          {
            "type": "string",
            "description": "削除するオブジェクトのオブジェクト ID",
            "name": "objectID",
            "in": "パス",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "オブジェクトは削除されました",
            "schema": {
              "type": "string"
            }
          },
          "500": {
            "description": "オブジェクトを削除できませんでした",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/api/v1/objects/{objectType}/{objectID}/activate": {
      "put": {
        "description": "指定したオブジェクト・タイプおよびオブジェクト ID のオブジェクトをアクティブとマーク付けます。\n非アクティブとしてオブジェクトを作成することができ、それは、オブジェクトがその宛先に配信されないことを意味します。\nそのようなオブジェクトをアクティブにして、宛先へのオブジェクトの配布を開始するために、この API が使用されます。",
        "produces": [
          "text/plain"
        ],
        "tags": [
          "ESS"
        ],
        "summary": "オブジェクトをアクティブとマーク付けます。",
        "operationId": "handleActivateObject",
        "parameters": [
          {
            "type": "string",
            "description": "アクティブとマーク付けするオブジェクトのオブジェクト・タイプ",
            "name": "objectType",
            "in": "パス",
            "required": true
          },
          {
            "type": "string",
            "description": "アクティブとマーク付けするオブジェクトのオブジェクト ID",
            "name": "objectID",
            "in": "パス",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "オブジェクトはアクティブとマーク付けされました",
            "schema": {
              "type": "string"
            }
          },
          "500": {
            "description": "オブジェクトをアクティブとマーク付けできませんでした",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/api/v1/objects/{objectType}/{objectID}/consumed": {
      "put": {
        "description": "指定したオブジェクト・タイプおよびオブジェクト ID のオブジェクトを、アプリケーションによってコンシューム済みとマーク付けます。\nコンシューム済みとマーク付けられた後でオブジェクトがアプリケーションに再び配信されることは (同期サービスが再始動された場合でも) ありません。",
        "produces": [
          "text/plain"
        ],
        "tags": [
          "ESS"
        ],
        "summary": "オブジェクトをコンシューム済みとマーク付けます。",
        "operationId": "handleObjectConsumed",
        "parameters": [
          {
            "type": "string",
            "description": "コンシューム済みとマーク付けするオブジェクトのオブジェクト・タイプ",
            "name": "objectType",
            "in": "パス",
            "required": true
          },
          {
            "type": "string",
            "description": "コンシューム済みとマーク付けするオブジェクトのオブジェクト ID",
            "name": "objectID",
            "in": "パス",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "オブジェクトはコンシューム済みとマーク付けされました",
            "schema": {
              "type": "string"
            }
          },
          "500": {
            "description": "オブジェクトをコンシューム済みとマーク付けできませんでした",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/api/v1/objects/{objectType}/{objectID}/data": {
      "get": {
        "description": "指定したオブジェクト・タイプおよびオブジェクト ID のオブジェクトのデータを取得します。\nオブジェクトのメタデータは、オブジェクトにデータが含まれているかどうかを示します (データなしは false)。",
        "produces": [
          "application/octet-stream",
          "text/plain"
        ],
        "tags": [
          "ESS"
        ],
        "summary": "オブジェクトのデータを取得します。",
        "operationId": "handleObjectGetData",
        "parameters": [
          {
            "type": "string",
            "description": "データを取得するオブジェクトのオブジェクト・タイプ",
            "name": "objectType",
            "in": "パス",
            "required": true
          },
          {
            "type": "string",
            "description": "データを取得するオブジェクトのオブジェクト ID",
            "name": "objectID",
            "in": "パス",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "オブジェクト・データ",
            "schema": {
              "type": "string",
              "format": "binary"
            }
          },
          "500": {
            "description": "オブジェクトのデータを取得できませんでした",
            "schema": {
              "type": "string"
            }
          }
        }
      },
      "put": {
        "description": "指定したオブジェクト・タイプおよびオブジェクト ID のオブジェクトのデータを更新します。\nオブジェクトのメタデータを更新することなく、データを更新できます。",
        "consumes": [
          "application/octet-stream"
        ],
        "produces": [
          "text/plain"
        ],
        "tags": [
          "ESS"
        ],
        "summary": "オブジェクトのデータを更新します。",
        "operationId": "handleObjectPutData",
        "parameters": [
          {
            "type": "string",
            "description": "データを更新するオブジェクトのオブジェクト・タイプ",
            "name": "objectType",
            "in": "パス",
            "required": true
          },
          {
            "type": "string",
            "description": "データを更新するオブジェクトのオブジェクト ID",
            "name": "objectID",
            "in": "パス",
            "required": true
          },
          {
            "description": "オブジェクトの新しいデータ。 ファイルからデータ・バイトを読み取る場合、ヘッダーの Content-Type として application/octet-stream を設定してください。",
            "name": "payload",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string",
              "format": "binary"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "オブジェクト・データは更新されました",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "指定されたオブジェクトは存在しません",
            "schema": {
              "type": "string"
            }
          },
          "500": {
            "description": "オブジェクトのデータを更新できませんでした",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/api/v1/objects/{objectType}/{objectID}/policyreceived": {
      "put": {
        "description": "指定したオブジェクト・タイプおよびオブジェクト ID のオブジェクトを、宛先ポリシーは受け取り済みとマーク付けます\nオブジェクトがそのようにマーク付けられた後、照会パラメーターに「received=true」を追加する場合を除いて、\n宛先ポリシーでオブジェクトをリストするアプリケーションに配信されることはありません。",
        "produces": [
          "text/plain"
        ],
        "tags": [
          "ESS"
        ],
        "summary": "オブジェクトの宛先ポリシーを受け取り済みとマーク付けます。",
        "operationId": "handlePolicyReceived",
        "parameters": [
          {
            "type": "string",
            "description": "宛先ポリシーを受け取り済みとマーク付けするオブジェクトのオブジェクト・タイプ",
            "name": "objectType",
            "in": "パス",
            "required": true
          },
          {
            "type": "string",
            "description": "宛先ポリシーを受け取り済みとマーク付けするオブジェクトのオブジェクト ID",
            "name": "objectID",
            "in": "パス",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "オブジェクトは宛先ポリシーが受け取り済みとマーク付けされました",
            "schema": {
              "type": "string"
            }
          },
          "500": {
            "description": "オブジェクトを宛先ポリシーが受け取り済みとマーク付けできませんでした",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/api/v1/objects/{objectType}/{objectID}/received": {
      "put": {
        "description": "指定したオブジェクト・タイプおよびオブジェクト ID のオブジェクトを、アプリケーションによって受け取り済みとマーク付けます。\n受け取り済みとマーク付けられた後でオブジェクトがアプリケーションに再び配信されるのは、オブジェクト要求に指定されてた場合のみです。",
        "produces": [
          "text/plain"
        ],
        "tags": [
          "ESS"
        ],
        "summary": "オブジェクトを受け取り済みとマーク付けます。",
        "operationId": "handleObjectReceived",
        "parameters": [
          {
            "type": "string",
            "description": "受け取り済みとマーク付けするオブジェクトのオブジェクト・タイプ",
            "name": "objectType",
            "in": "パス",
            "required": true
          },
          {
            "type": "string",
            "description": "受け取り済みとマーク付けするオブジェクトのオブジェクト ID",
            "name": "objectID",
            "in": "パス",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "オブジェクトは受け取り済みとマーク付けされました",
            "schema": {
              "type": "string"
            }
          },
          "500": {
            "description": "オブジェクトを受け取り済みとマーク付けできませんでした",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/api/v1/objects/{objectType}/{objectID}/status": {
      "get": {
        "description": "指定したオブジェクト・タイプおよびオブジェクト ID のオブジェクトの状況を取得します。\nオブジェクトの状況は次のいずれかです:\nnotReady - オブジェクトは宛先に送信される準備ができていません。\nready - オブジェクトは宛先に送信される準備ができています。\nreceived - オブジェクトのメタデータは受け取り済みですが、データのすべてがそうではありません。\ncompletelyReceived - 完全なオブジェクト (メタデータおよびデータ) が受け取り済みです。\nconsumed - オブジェクトはアプリケーションによってコンシューム済みです。\ndeleted - オブジェクトは削除されました。",
        "produces": [
          "text/plain"
        ],
        "tags": [
          "ESS"
        ],
        "summary": "オブジェクトの状況を取得します。",
        "operationId": "handleObjectStatus",
        "parameters": [
          {
            "type": "string",
            "description": "状況を取得するオブジェクトのオブジェクト・タイプ",
            "name": "objectType",
            "in": "パス",
            "required": true
          },
          {
            "type": "string",
            "description": "状況を取得するオブジェクトのオブジェクト ID",
            "name": "objectID",
            "in": "パス",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "オブジェクトの状況",
            "schema": {
              "type": "string",
              "enum": [
                "notReady",
                "ready",
                "received",
                "completelyReceived",
                "consumed",
                "deleted"
              ]
            }
          },
          "500": {
            "description": "オブジェクトの状況を取得できませんでした",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/api/v1/objects/{orgID}/{objectType}": {
      "get": {
        "description": "指定したオブジェクト・タイプのオブジェクトを取得します。 すべてのオブジェクトを取得するか、処理待ち (未コンシューム) の更新があるオブジェクトのみを取得します。\nアプリケーションで後者の API を定期的に起動して更新があるかどうかをチェックするのが典型的です (代替方法は、Webhook を使用することです)。",
        "produces": [
          "application/json",
          "text/plain"
        ],
        "tags": [
          "CSS"
        ],
        "summary": "指定したタイプのオブジェクトを取得します。",
        "operationId": "handleListObjects",
        "parameters": [
          {
            "type": "string",
            "description": "返されるオブジェクトの orgID",
            "name": "orgID",
            "in": "パス",
            "required": true
          },
          {
            "type": "string",
            "description": "返されるオブジェクトのオブジェクト・タイプ",
            "name": "objectType",
            "in": "パス",
            "required": true
          },
          {
            "type": "ブール値",
            "description": "更新されたオブジェクトのみを返す場合、アプリケーションによって受け取り済みであるとマーク付けられたオブジェクトを含むかどうか",
            "name": "received",
            "in": "照会"
          }
        ],
        "responses": {
          "200": {
            "description": "更新された更新応答",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/MetaData"
              }
            }
          },
          "404": {
            "description": "更新されたオブジェクトが見つかりません",
            "schema": {
              "type": "string"
            }
          },
          "500": {
            "description": "更新されたオブジェクトを取得できませんでした",
            "schema": {
              "type": "string"
            }
          }
        }
      },
      "put": {
        "description": "指定したオブジェクト・タイプの Webhook を登録または削除します。\n指定したオブジェクト・タイプのオブジェクトの更新についての通知を処理するために Webhook が使用されます。",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "text/plain"
        ],
        "tags": [
          "CSS"
        ],
        "summary": "Webhook を登録または削除します。",
        "operationId": "handleWebhook",
        "parameters": [
          {
            "type": "string",
            "description": "Webhook のオブジェクトの orgID",
            "name": "orgID",
            "in": "パス",
            "required": true
          },
          {
            "type": "string",
            "description": "Webhook のオブジェクトのオブジェクト・タイプ。",
            "name": "objectType",
            "in": "パス",
            "required": true
          },
          {
            "description": "Webhook のデータ",
            "name": "payload",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/webhookUpdate"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Webhook は登録/削除されました",
            "schema": {
              "type": "string"
            }
          },
          "500": {
            "description": "Webhook のデータを更新できませんでした",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/api/v1/objects/{orgID}/{objectType}/{objectID}": {
      "get": {
        "description": "指定したオブジェクト・タイプおよびオブジェクト ID のオブジェクトのメタデータを取得します。\nメタデータはオブジェクトにデータが含まれているかどうかを示します。そのデータは後で適切な API を使用して取得できます。",
        "produces": [
          "application/json",
          "text/plain"
        ],
        "tags": [
          "CSS"
        ],
        "summary": "オブジェクトを取得します。",
        "operationId": "handleGetObject",
        "parameters": [
          {
            "type": "string",
            "description": "返されるオブジェクトの orgID。",
            "name": "orgID",
            "in": "パス",
            "required": true
          },
          {
            "type": "string",
            "description": "返されるオブジェクトのオブジェクト・タイプ",
            "name": "objectType",
            "in": "パス",
            "required": true
          },
          {
            "type": "string",
            "description": "返されるオブジェクトのオブジェクト ID",
            "name": "objectID",
            "in": "パス",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "オブジェクト応答",
            "schema": {
              "$ref": "#/definitions/MetaData"
            }
          },
          "404": {
            "description": "オブジェクトが見つかりません",
            "schema": {
              "type": "string"
            }
          },
          "500": {
            "description": "オブジェクトを取得できませんでした",
            "schema": {
              "type": "string"
            }
          }
        }
      },
      "put": {
        "description": "指定したオブジェクト・タイプおよびオブジェクト ID のオブジェクトを更新/作成します。\n同じタイプおよび ID のオブジェクトが存在する場合はそのオブジェクトが更新され、それ以外の場合は新規オブジェクトが作成されます。",
        "produces": [
          "text/plain"
        ],
        "tags": [
          "CSS"
        ],
        "summary": "オブジェクトを更新/作成します。",
        "operationId": "handleUpdateObject",
        "parameters": [
          {
            "type": "string",
            "description": "更新/作成するオブジェクトの orgID",
            "name": "orgID",
            "in": "パス",
            "required": true
          },
          {
            "type": "string",
            "description": "更新/作成するオブジェクトのオブジェクト・タイプ",
            "name": "objectType",
            "in": "パス",
            "required": true
          },
          {
            "type": "string",
            "description": "更新/作成するオブジェクトのオブジェクト ID",
            "name": "objectID",
            "in": "パス",
            "required": true
          },
          {
            "name": "payload",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/objectUpdate"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "オブジェクトは更新されました",
            "schema": {
              "type": "string"
            }
          },
          "500": {
            "description": "オブジェクトを更新/作成できませんでした",
            "schema": {
              "type": "string"
            }
          }
        }
      },
      "delete": {
        "description": "指定したオブジェクト・タイプおよびオブジェクト ID のオブジェクトを削除します。\nオブジェクトの宛先に、オブジェクトが削除されたことが通知されます。",
        "produces": [
          "text/plain"
        ],
        "tags": [
          "CSS"
        ],
        "summary": "オブジェクトを削除します。",
        "operationId": "handleDeleteObject",
        "parameters": [
          {
            "type": "string",
            "description": "削除するオブジェクトの orgID。",
            "name": "orgID",
            "in": "パス",
            "required": true
          },
          {
            "type": "string",
            "description": "削除するオブジェクトのオブジェクト・タイプ",
            "name": "objectType",
            "in": "パス",
            "required": true
          },
          {
            "type": "string",
            "description": "削除するオブジェクトのオブジェクト ID",
            "name": "objectID",
            "in": "パス",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "オブジェクトは削除されました",
            "schema": {
              "type": "string"
            }
          },
          "500": {
            "description": "オブジェクトを削除できませんでした",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/api/v1/objects/{orgID}/{objectType}/{objectID}/activate": {
      "put": {
        "description": "指定したオブジェクト・タイプおよびオブジェクト ID のオブジェクトをアクティブとマーク付けます。\n非アクティブとしてオブジェクトを作成することができ、それは、オブジェクトがその宛先に配信されないことを意味します。\nそのようなオブジェクトをアクティブにして、宛先へのオブジェクトの配布を開始するために、この API が使用されます。",
        "produces": [
          "text/plain"
        ],
        "tags": [
          "CSS"
        ],
        "summary": "オブジェクトをアクティブとマーク付けます。",
        "operationId": "handleActivateObject",
        "parameters": [
          {
            "type": "string",
            "description": "アクティブとマーク付けするオブジェクトの orgID",
            "name": "orgID",
            "in": "パス",
            "required": true
          },
          {
            "type": "string",
            "description": "アクティブとマーク付けするオブジェクトのオブジェクト・タイプ",
            "name": "objectType",
            "in": "パス",
            "required": true
          },
          {
            "type": "string",
            "description": "アクティブとマーク付けするオブジェクトのオブジェクト ID",
            "name": "objectID",
            "in": "パス",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "オブジェクトはアクティブとマーク付けされました",
            "schema": {
              "type": "string"
            }
          },
          "500": {
            "description": "オブジェクトをアクティブとマーク付けできませんでした",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/api/v1/objects/{orgID}/{objectType}/{objectID}/consumed": {
      "put": {
        "description": "指定したオブジェクト・タイプおよびオブジェクト ID のオブジェクトを、アプリケーションによってコンシューム済みとマーク付けます。\nコンシューム済みとマーク付けられた後でオブジェクトがアプリケーションに再び配信されることは (同期サービスが再始動された場合でも) ありません。",
        "produces": [
          "text/plain"
        ],
        "tags": [
          "CSS"
        ],
        "summary": "オブジェクトをコンシューム済みとマーク付けます。",
        "operationId": "handleObjectConsumed",
        "parameters": [
          {
            "type": "string",
            "description": "コンシューム済みとマーク付けするオブジェクトの orgID。",
            "name": "orgID",
            "in": "パス",
            "required": true
          },
          {
            "type": "string",
            "description": "コンシューム済みとマーク付けするオブジェクトのオブジェクト・タイプ",
            "name": "objectType",
            "in": "パス",
            "required": true
          },
          {
            "type": "string",
            "description": "コンシューム済みとマーク付けするオブジェクトのオブジェクト ID",
            "name": "objectID",
            "in": "パス",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "オブジェクトはコンシューム済みとマーク付けされました",
            "schema": {
              "type": "string"
            }
          },
          "500": {
            "description": "オブジェクトをコンシューム済みとマーク付けできませんでした",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/api/v1/objects/{orgID}/{objectType}/{objectID}/data": {
      "get": {
        "description": "指定したオブジェクト・タイプおよびオブジェクト ID のオブジェクトのデータを取得します。\nオブジェクトのメタデータは、オブジェクトにデータが含まれているかどうかを示します (データなしは false)。",
        "produces": [
          "application/octet-stream",
          "text/plain"
        ],
        "tags": [
          "CSS"
        ],
        "summary": "オブジェクトのデータを取得します。",
        "operationId": "handleObjectGetData",
        "parameters": [
          {
            "type": "string",
            "description": "データを取得するオブジェクトの orgID",
            "name": "orgID",
            "in": "パス",
            "required": true
          },
          {
            "type": "string",
            "description": "データを取得するオブジェクトのオブジェクト・タイプ",
            "name": "objectType",
            "in": "パス",
            "required": true
          },
          {
            "type": "string",
            "description": "データを取得するオブジェクトのオブジェクト ID",
            "name": "objectID",
            "in": "パス",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "オブジェクト・データ",
            "schema": {
              "type": "string",
              "format": "binary"
            }
          },
          "500": {
            "description": "オブジェクトのデータを取得できませんでした",
            "schema": {
              "type": "string"
            }
          }
        }
      },
      "put": {
        "description": "指定したオブジェクト・タイプおよびオブジェクト ID のオブジェクトのデータを更新します。\nオブジェクトのメタデータを更新することなく、データを更新できます。",
        "consumes": [
          "application/octet-stream"
        ],
        "produces": [
          "text/plain"
        ],
        "tags": [
          "CSS"
        ],
        "summary": "オブジェクトのデータを更新します。",
        "operationId": "handleObjectPutData",
        "parameters": [
          {
            "type": "string",
            "description": "データを更新するオブジェクトの orgID",
            "name": "orgID",
            "in": "パス",
            "required": true
          },
          {
            "type": "string",
            "description": "データを更新するオブジェクトのオブジェクト・タイプ",
            "name": "objectType",
            "in": "パス",
            "required": true
          },
          {
            "type": "string",
            "description": "データを更新するオブジェクトのオブジェクト ID",
            "name": "objectID",
            "in": "パス",
            "required": true
          },
          {
            "description": "オブジェクトの新しいデータ。 ファイルからデータ・バイトを読み取る場合、ヘッダーの Content-Type として application/octet-stream を設定してください。",
            "name": "payload",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string",
              "format": "binary"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "オブジェクト・データは更新されました",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "指定されたオブジェクトは存在しません",
            "schema": {
              "type": "string"
            }
          },
          "500": {
            "description": "オブジェクトのデータを更新できませんでした",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/api/v1/objects/{orgID}/{objectType}/{objectID}/deleted": {
      "put": {
        "description": "指定したオブジェクト・タイプおよびオブジェクト ID のオブジェクトのアプリケーションによる削除を確認します。\nアプリケーションは、オブジェクトの削除に関連するアクションを完了した後でこの API を起動する必要があります。",
        "produces": [
          "text/plain"
        ],
        "tags": [
          "CSS",
          "ESS"
        ],
        "summary": "サービスはオブジェクト削除を確認します。",
        "operationId": "handleObjectDeleted",
        "parameters": [
          {
            "type": "string",
            "description": "削除を確認するオブジェクトの orgID。 CSS を処理している場合にのみ存在し、ESS を処理している場合はパスから削除されます",
            "name": "orgID",
            "in": "パス",
            "required": true
          },
          {
            "type": "string",
            "description": "削除を確認するオブジェクトのオブジェクト・タイプ",
            "name": "objectType",
            "in": "パス",
            "required": true
          },
          {
            "type": "string",
            "description": "削除を確認するオブジェクトのオブジェクト ID",
            "name": "objectID",
            "in": "パス",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "オブジェクトの削除は確認されました",
            "schema": {
              "type": "string"
            }
          },
          "500": {
            "description": "オブジェクトの削除を確認できませんでした",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/api/v1/objects/{orgID}/{objectType}/{objectID}/destinations": {
      "get": {
        "description": "指定したオブジェクト・タイプおよびオブジェクト ID のオブジェクトの宛先である同期サービス (ESS) ノードのリストを取得します。\n宛先ごとのオブジェクトの配信状況が、そのタイプおよび ID と共に提供されます。\nこれは CSS のみの API です。",
        "produces": [
          "text/plain"
        ],
        "tags": [
          "CSS"
        ],
        "summary": "オブジェクトの宛先を取得します。",
        "operationId": "handleObjectDestinations",
        "parameters": [
          {
            "type": "string",
            "description": "宛先を取得するオブジェクトの orgID。 CSS を処理している場合にのみ存在し、ESS を処理している場合はパスから削除されます",
            "name": "orgID",
            "in": "パス",
            "required": true
          },
          {
            "type": "string",
            "description": "宛先を取得するオブジェクトのオブジェクト・タイプ",
            "name": "objectType",
            "in": "パス",
            "required": true
          },
          {
            "type": "string",
            "description": "宛先を取得するオブジェクトのオブジェクト ID",
            "name": "objectID",
            "in": "パス",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "オブジェクト宛先および状況",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/DestinationsStatus"
              }
            }
          },
          "500": {
            "description": "オブジェクトの宛先を取得できませんでした",
            "schema": {
              "type": "string"
            }
          }
        }
      },
      "put": {
        "description": "指定したオブジェクト・タイプおよびオブジェクト ID のオブジェクトの宛先となるよう同期サービス (ESS) ノードのリストを設定します。\nこれは CSS のみの API です。",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "text/plain"
        ],
        "tags": [
          "CSS"
        ],
        "summary": "オブジェクトの宛先を設定します。",
        "operationId": "handleObjectDestinationsUpdate",
        "parameters": [
          {
            "type": "string",
            "description": "宛先を更新するオブジェクトの orgID",
            "name": "orgID",
            "in": "パス",
            "required": true
          },
          {
            "type": "string",
            "description": "宛先を更新するオブジェクトのオブジェクト・タイプ",
            "name": "objectType",
            "in": "パス",
            "required": true
          },
          {
            "type": "string",
            "description": "宛先を更新するオブジェクトのオブジェクト ID",
            "name": "objectID",
            "in": "パス",
            "required": true
          },
          {
            "description": "オブジェクトの宛先リスト",
            "name": "payload",
            "in": "body",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "204": {
            "description": "オブジェクト宛先は更新されました",
            "schema": {
              "type": "string"
            }
          },
          "500": {
            "description": "オブジェクトの宛先を更新できませんでした",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/api/v1/objects/{orgID}/{objectType}/{objectID}/policyreceived": {
      "put": {
        "description": "指定したオブジェクト・タイプおよびオブジェクト ID のオブジェクトを、宛先ポリシーは受け取り済みとマーク付けます\nオブジェクトがそのようにマーク付けられた後、照会パラメーターに「received=true」を追加する場合を除いて、\n宛先ポリシーでオブジェクトをリストするアプリケーションに配信されることはありません。",
        "produces": [
          "text/plain"
        ],
        "tags": [
          "CSS"
        ],
        "summary": "オブジェクトの宛先ポリシーを受け取り済みとマーク付けます。",
        "operationId": "handlePolicyReceived",
        "parameters": [
          {
            "type": "string",
            "description": "宛先ポリシーを受け取り済みとマーク付けするオブジェクトの orgID。",
            "name": "orgID",
            "in": "パス",
            "required": true
          },
          {
            "type": "string",
            "description": "宛先ポリシーを受け取り済みとマーク付けするオブジェクトのオブジェクト・タイプ",
            "name": "objectType",
            "in": "パス",
            "required": true
          },
          {
            "type": "string",
            "description": "宛先ポリシーを受け取り済みとマーク付けするオブジェクトのオブジェクト ID",
            "name": "objectID",
            "in": "パス",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "オブジェクトは宛先ポリシーが受け取り済みとマーク付けされました",
            "schema": {
              "type": "string"
            }
          },
          "500": {
            "description": "オブジェクトを宛先ポリシーが受け取り済みとマーク付けできませんでした",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/api/v1/objects/{orgID}/{objectType}/{objectID}/received": {
      "put": {
        "description": "指定したオブジェクト・タイプおよびオブジェクト ID のオブジェクトを、アプリケーションによって受け取り済みとマーク付けます。\n受け取り済みとマーク付けられた後でオブジェクトがアプリケーションに再び配信されるのは、オブジェクト要求に指定されてた場合のみです。",
        "produces": [
          "text/plain"
        ],
        "tags": [
          "CSS"
        ],
        "summary": "オブジェクトを受け取り済みとマーク付けます。",
        "operationId": "handleObjectReceived",
        "parameters": [
          {
            "type": "string",
            "description": "受け取り済みとマーク付けするオブジェクトの orgID",
            "name": "orgID",
            "in": "パス",
            "required": true
          },
          {
            "type": "string",
            "description": "受け取り済みとマーク付けするオブジェクトのオブジェクト・タイプ",
            "name": "objectType",
            "in": "パス",
            "required": true
          },
          {
            "type": "string",
            "description": "受け取り済みとマーク付けするオブジェクトのオブジェクト ID",
            "name": "objectID",
            "in": "パス",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "オブジェクトは受け取り済みとマーク付けされました",
            "schema": {
              "type": "string"
            }
          },
          "500": {
            "description": "オブジェクトを受け取り済みとマーク付けできませんでした",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/api/v1/objects/{orgID}/{objectType}/{objectID}/status": {
      "get": {
        "description": "指定したオブジェクト・タイプおよびオブジェクト ID のオブジェクトの状況を取得します。\nオブジェクトの状況は次のいずれかです:\nnotReady - オブジェクトは宛先に送信される準備ができていません。\nready - オブジェクトは宛先に送信される準備ができています。\nreceived - オブジェクトのメタデータは受け取り済みですが、データのすべてがそうではありません。\ncompletelyReceived - 完全なオブジェクト (メタデータおよびデータ) が受け取り済みです。\nconsumed - オブジェクトはアプリケーションによってコンシューム済みです。\ndeleted - オブジェクトは削除されました。",
        "produces": [
          "text/plain"
        ],
        "tags": [
          "CSS"
        ],
        "summary": "オブジェクトの状況を取得します。",
        "operationId": "handleObjectStatus",
        "parameters": [
          {
            "type": "string",
            "description": "状況を取得するオブジェクトの orgID",
            "name": "orgID",
            "in": "パス",
            "required": true
          },
          {
            "type": "string",
            "description": "状況を取得するオブジェクトのオブジェクト・タイプ",
            "name": "objectType",
            "in": "パス",
            "required": true
          },
          {
            "type": "string",
            "description": "状況を取得するオブジェクトのオブジェクト ID",
            "name": "objectID",
            "in": "パス",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "オブジェクトの状況",
            "schema": {
              "type": "string",
              "enum": [
                "notReady",
                "ready",
                "received",
                "completelyReceived",
                "consumed",
                "deleted"
              ]
            }
          },
          "500": {
            "description": "オブジェクトの状況を取得できませんでした",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/api/v1/objects/{orgID}/{objectType}?all_objects=true": {
      "get": {
        "description": "指定したオブジェクト・タイプのオブジェクトで宛先ポリシーのあるすべてのオブジェクトを取得します。",
        "produces": [
          "application/json",
          "text/plain"
        ],
        "tags": [
          "ESS"
        ],
        "summary": "指定したタイプの宛先ポリシーのあるオブジェクトを取得します。",
        "operationId": "handleListAllObjects",
        "parameters": [
          {
            "type": "string",
            "description": "返されるオブジェクトのオブジェクト・タイプ",
            "name": "objectType",
            "in": "パス",
            "required": true
          },
          {
            "type": "ブール値",
            "description": "すべてのオブジェクトを含めるかどうか。 false の場合、更新されたオブジェクトのみが返されます。",
            "name": "all_objects",
            "in": "照会",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "宛先ポリシーのあるオブジェクト応答",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ObjectDestinationPolicy"
              }
            }
          },
          "404": {
            "description": "宛先ポリシーのあるオブジェクトが見つかりません",
            "schema": {
              "type": "string"
            }
          },
          "500": {
            "description": "更新されたオブジェクトを取得できませんでした",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/api/v1/objects/{orgID}?destination_policy=true": {
      "get": {
        "description": "宛先ポリシーのあるオブジェクトのリストを取得します。\nアプリケーションでこの API を定期的に起動して更新があるかどうかをチェックするのが典型的です。",
        "produces": [
          "application/json",
          "text/plain"
        ],
        "tags": [
          "CSS"
        ],
        "summary": "宛先ポリシーのあるオブジェクトを取得します。",
        "operationId": "handleListObjectsWithDestinationPolicy",
        "parameters": [
          {
            "type": "string",
            "description": "返される更新されたオブジェクトの orgID",
            "name": "orgID",
            "in": "パス",
            "required": true
          },
          {
            "type": "ブール値",
            "description": "宛先ポリシーのあるオブジェクトを取得することを指示するには true でなければなりません",
            "name": "destination_policy",
            "in": "照会",
            "required": true
          },
          {
            "type": "ブール値",
            "description": "アプリケーションによって受け取り済みであるとマーク付けられたオブジェクトを含めるかどうか",
            "name": "received",
            "in": "照会"
          },
          {
            "type": "string",
            "description": "宛先ポリシーを取り出す必要のあるオブジェクトが類縁性を持つサービスの ID (orgID/serviceName)。",
            "name": "service",
            "in": "照会"
          },
          {
            "type": "整数",
            "format": "int64",
            "description": "指定した UTC 時刻 (ナノ秒) 以降に更新された宛先ポリシーのあるオブジェクトが取り出される必要があります。",
            "name": "since",
            "in": "照会"
          }
        ],
        "responses": {
          "200": {
            "description": "オブジェクト宛先ポリシー応答",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ObjectDestinationPolicy"
              }
            }
          },
          "404": {
            "description": "更新されたオブジェクトが見つかりません",
            "schema": {
              "type": "string"
            }
          },
          "500": {
            "description": "更新されたオブジェクトを取得できませんでした",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/api/v1/objects/{orgID}?filters=true": {
      "get": {
        "description": "指定したフィルターを満足するオブジェクトのリストを取得します。\nこれは CSS のみの API です。",
        "produces": [
          "application/json",
          "text/plain"
        ],
        "tags": [
          "CSS"
        ],
        "summary": "指定したフィルターを満足するオブジェクトを取得します",
        "operationId": "handleListObjectsWithFilters",
        "parameters": [
          {
            "type": "string",
            "description": "返される更新されたオブジェクトの orgID。 CSS を処理している場合にのみ存在し、ESS を処理している場合はパスから削除されます",
            "name": "orgID",
            "in": "パス",
            "required": true
          },
          {
            "type": "ブール値",
            "description": "フィルターのあるオブジェクトを取得することを指示するには true でなければなりません",
            "name": "filters",
            "in": "照会",
            "required": true
          },
          {
            "type": "ブール値",
            "description": "宛先ポリシーのあるオブジェクトを取得することを指示するには true でなければなりません",
            "name": "destinationPolicy",
            "in": "照会"
          },
          {
            "type": "string",
            "description": "宛先ポリシーを取り出す必要のあるオブジェクトが類縁性を持つサービスの ID (orgID/serviceName)。",
            "name": "dpService",
            "in": "照会"
          },
          {
            "type": "string",
            "description": "宛先ポリシーを取り出す必要のあるオブジェクトが類縁性を持つ宛先ポリシー内部に定義されたプロパティー名。",
            "name": "dpPropertyName",
            "in": "照会"
          },
          {
            "type": "string",
            "description": "指定したタイム・スタンプ (RFC3339) 以降に更新された宛先ポリシーのあるオブジェクトが取り出される必要があります。",
            "name": "since",
            "in": "照会"
          },
          {
            "type": "string",
            "description": "指定したオブジェクト・タイプのオブジェクトを取り出します",
            "name": "objectType",
            "in": "照会"
          },
          {
            "type": "string",
            "description": "指定したオブジェクト ID のオブジェクトを取り出します",
            "name": "objectID",
            "in": "照会"
          },
          {
            "type": "string",
            "description": "指定した宛先タイプのオブジェクトを取り出します",
            "name": "destinationType",
            "in": "照会"
          },
          {
            "type": "string",
            "description": "指定した宛先 ID のオブジェクトを取り出します",
            "name": "destinationID",
            "in": "照会"
          },
          {
            "type": "ブール値",
            "description": "noData が true とマーク付けされたオブジェクトを取り出します",
            "name": "noData",
            "in": "照会"
          },
          {
            "type": "string",
            "description": "指定した RFC3339 形式のタイム・スタンプより前の有効期限のオブジェクトを取り出します",
            "name": "expirationTimeBefore",
            "in": "照会"
          }
        ],
        "responses": {
          "200": {
            "description": "オブジェクト応答",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/MetaData"
              }
            }
          },
          "404": {
            "description": "オブジェクトが見つかりません",
            "schema": {
              "type": "string"
            }
          },
          "500": {
            "description": "オブジェクトを取得できませんでした",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/api/v1/objects?destination_policy=true": {
      "get": {
        "description": "宛先ポリシーのあるオブジェクトのリストを取得します。\nアプリケーションでこの API を定期的に起動して更新があるかどうかをチェックするのが典型的です。",
        "produces": [
          "application/json",
          "text/plain"
        ],
        "tags": [
          "ESS"
        ],
        "summary": "宛先ポリシーのあるオブジェクトを取得します。",
        "operationId": "handleListObjectsWithDestinationPolicy",
        "parameters": [
          {
            "type": "ブール値",
            "description": "宛先ポリシーのあるオブジェクトを取得することを指示するには true でなければなりません",
            "name": "destination_policy",
            "in": "照会",
            "required": true
          },
          {
            "type": "ブール値",
            "description": "アプリケーションによって受け取り済みであるとマーク付けられたオブジェクトを含めるかどうか",
            "name": "received",
            "in": "照会"
          },
          {
            "type": "string",
            "description": "宛先ポリシーを取り出す必要のあるオブジェクトが類縁性を持つサービスの ID (orgID/serviceName)。",
            "name": "service",
            "in": "照会"
          },
          {
            "type": "整数",
            "format": "int64",
            "description": "指定した UTC 時刻 (ナノ秒) 以降に更新された宛先ポリシーのあるオブジェクトが取り出される必要があります。",
            "name": "since",
            "in": "照会"
          }
        ],
        "responses": {
          "200": {
            "description": "オブジェクト宛先ポリシー応答",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ObjectDestinationPolicy"
              }
            }
          },
          "404": {
            "description": "更新されたオブジェクトが見つかりません",
            "schema": {
              "type": "string"
            }
          },
          "500": {
            "description": "更新されたオブジェクトを取得できませんでした",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/api/v1/organizations": {
      "get": {
        "description": "既存の組織のリストを取得します。 CSS 関連のみ。",
        "produces": [
          "application/json",
          "text/plain"
        ],
        "tags": [
          "CSS"
        ],
        "summary": "組織を取得します。",
        "operationId": "handleGetOrganizations",
        "responses": {
          "200": {
            "description": "組織応答",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/organization"
              }
            }
          },
          "404": {
            "description": "組織が見つかりません",
            "schema": {
              "type": "string"
            }
          },
          "500": {
            "description": "組織を取得できませんでした",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/api/v1/organizations/{orgID}": {
      "put": {
        "description": "組織情報を保管します。 CSS 関連のみ。",
        "produces": [
          "text/plain"
        ],
        "tags": [
          "CSS"
        ],
        "summary": "組織を更新します。",
        "operationId": "handleOrganizations",
        "parameters": [
          {
            "type": "string",
            "description": "更新する組織の orgID。",
            "name": "orgID",
            "in": "パス",
            "required": true
          },
          {
            "name": "payload",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Organization"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "組織は正常に更新されました",
            "schema": {
              "type": "string"
            }
          },
          "500": {
            "description": "組織を更新できませんでした",
            "schema": {
              "type": "string"
            }
          }
        }
      },
      "delete": {
        "description": "組織情報を削除し、削除された組織と関連付けられているすべてのリソース (オブジェクト、宛先など) を\nクリーンアップします。 CSS 関連のみ。",
        "produces": [
          "text/plain"
        ],
        "tags": [
          "CSS"
        ],
        "summary": "組織を削除します。",
        "operationId": "handleDeleteOrganization",
        "parameters": [
          {
            "type": "string",
            "description": "削除する組織の orgID。",
            "name": "orgID",
            "in": "パス",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "組織は正常に削除されました",
            "schema": {
              "type": "string"
            }
          },
          "500": {
            "description": "組織を削除できませんでした",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/api/v1/resend": {
      "post": {
        "description": "すべてのオブジェクトを再送するよう CSS に依頼するために ESS によって使用されます (ESS から CSS への要求の場合にのみサポートされています)。\nアプリケーションがこの API を使用する必要があるのは、以前に ESS から取得したデータが失われた場合のみです。",
        "produces": [
          "text/plain"
        ],
        "tags": [
          "ESS"
        ],
        "summary": "オブジェクトを再送するよう要求します。",
        "operationId": "handleResend",
        "responses": {
          "204": {
            "description": "要求は送信されます",
            "schema": {
              "type": "string"
            }
          },
          "400": {
            "description": "要求は Cloud Sync-Service では許可されません",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/api/v1/security/{type}/{orgID}": {
      "get": {
        "produces": [
          "text/plain"
        ],
        "tags": [
          "CSS"
        ],
        "summary": "組織の宛先またはオブジェクト ACL のリストを取得します。",
        "operationId": "handleACLGetAll",
        "parameters": [
          {
            "enum": [
              "destinations",
              "objects"
            ],
            "type": "string",
            "description": "ユーザー名リストを取得する必要のある ACL のタイプ。",
            "name": "type",
            "in": "パス",
            "required": true
          },
          {
            "type": "string",
            "description": "宛先タイプまたはオブジェクト・タイプの ACL が存在する orgID。",
            "name": "orgID",
            "in": "パス",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "指定したタイプの ACL のリストが取得されました",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "404": {
            "description": "ACL が見つかりません",
            "schema": {
              "type": "string"
            }
          },
          "500": {
            "description": "指定したタイプの ACL のリストを取得できませんでした",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/api/v1/security/{type}/{orgID}/{key}": {
      "get": {
        "produces": [
          "text/plain"
        ],
        "tags": [
          "CSS"
        ],
        "summary": "宛先タイプまたはオブジェクト・タイプの ACL からユーザー名のリストを取得します。",
        "operationId": "handleACLGet",
        "parameters": [
          {
            "enum": [
              "destinations",
              "objects"
            ],
            "type": "string",
            "description": "ユーザー名リストを取得する必要のある ACL のタイプ。",
            "name": "type",
            "in": "パス",
            "required": true
          },
          {
            "type": "string",
            "description": "宛先タイプまたはオブジェクト・タイプの ACL が存在する orgID。",
            "name": "orgID",
            "in": "パス",
            "required": true
          },
          {
            "type": "string",
            "description": "ACL によって保護される宛先タイプまたはオブジェクト・タイプ。",
            "name": "key",
            "in": "パス",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "指定した ACL からユーザー名のリストが取得されました。",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "404": {
            "description": "ACL が見つかりません",
            "schema": {
              "type": "string"
            }
          },
          "500": {
            "description": "指定した ACL からユーザー名を取得できませんでした。",
            "schema": {
              "type": "string"
            }
          }
        }
      },
      "put": {
        "description": "宛先タイプまたはオブジェクト・タイプの ACL でユーザー名を一括追加/削除します。 \n追加されるのが最初のユーザー名である場合、ACL は作成されます。 最後のユーザー名が削除される場合、ACL は削除されます。\n",
        "produces": [
          "text/plain"
        ],
        "tags": [
          "CSS"
        ],
        "summary": "Bulk add/remove of username(s) to/from an ACL for a destination type or an object type.",
        "operationId": "handleBulkACLUpdate",
        "parameters": [
          {
            "enum": [
              "destinations",
              "objects"
            ],
            "type": "string",
            "description": "指定したユーザー名を追加/削除する ACL のタイプ。",
            "name": "type",
            "in": "パス",
            "required": true
          },
          {
            "type": "string",
            "description": "宛先タイプまたはオブジェクト・タイプの ACL が存在する orgID。",
            "name": "orgID",
            "in": "パス",
            "required": true
          },
          {
            "type": "string",
            "description": "ACL によって保護される宛先タイプまたはオブジェクト・タイプ。",
            "name": "key",
            "in": "パス",
            "required": true
          },
          {
            "name": "payload",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/bulkACLUpdate"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "ユーザー名は指定した ACL で追加/削除されました。",
            "schema": {
              "type": "string"
            }
          },
          "500": {
            "description": "指定した ACL でユーザー名を追加/削除できませんでした。",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/api/v1/security/{type}/{orgID}/{key}/{username}": {
      "put": {
        "description": "宛先タイプまたはオブジェクト・タイプの ACL にユーザー名を追加します。 追加されるのが最初のユーザー名である場合、\nACL は作成されます。",
        "produces": [
          "text/plain"
        ],
        "tags": [
          "CSS"
        ],
        "summary": "Add a username to an ACL for a destination type or an object type.",
        "operationId": "handleACLUpdate",
        "parameters": [
          {
            "enum": [
              "destinations",
              "objects"
            ],
            "type": "string",
            "description": "指定したユーザー名を追加する ACL のタイプ。",
            "name": "type",
            "in": "パス",
            "required": true
          },
          {
            "type": "string",
            "description": "宛先タイプまたはオブジェクト・タイプの ACL が存在する orgID。",
            "name": "orgID",
            "in": "パス",
            "required": true
          },
          {
            "type": "string",
            "description": "ACL によって保護される宛先タイプまたはオブジェクト・タイプ。",
            "name": "key",
            "in": "パス",
            "required": true
          },
          {
            "type": "string",
            "description": "指定した ACL に追加するユーザー名。",
            "name": "username",
            "in": "パス",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "指定した ACL にユーザー名が追加されました。",
            "schema": {
              "type": "string"
            }
          },
          "500": {
            "description": "指定した ACL にユーザー名を追加できませんでした。",
            "schema": {
              "type": "string"
            }
          }
        }
      },
      "delete": {
        "description": "宛先タイプまたはオブジェクト・タイプの ACL からユーザー名を削除します。 最後のユーザー名が削除される場合、\nACL も削除されます。",
        "produces": [
          "text/plain"
        ],
        "tags": [
          "CSS"
        ],
        "summary": "Remove a username from an ACL for a destination type or an object type.",
        "operationId": "handleACLDelete",
        "parameters": [
          {
            "enum": [
              "destinations",
              "objects"
            ],
            "type": "string",
            "description": "指定したユーザー名を削除する ACL のタイプ。",
            "name": "type",
            "in": "パス",
            "required": true
          },
          {
            "type": "string",
            "description": "宛先タイプまたはオブジェクト・タイプの ACL が存在する orgID。",
            "name": "orgID",
            "in": "パス",
            "required": true
          },
          {
            "type": "string",
            "description": "ACL によって保護される宛先タイプまたはオブジェクト・タイプ。",
            "name": "key",
            "in": "パス",
            "required": true
          },
          {
            "type": "string",
            "description": "指定した ACL から削除するユーザー名。",
            "name": "username",
            "in": "パス",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "指定した ACL からユーザー名が削除されました。",
            "schema": {
              "type": "string"
            }
          },
          "500": {
            "description": "指定した ACL からユーザー名を削除できませんでした。",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "ConsumedObject": {
      "description": "ConsumedObject には、コンシュームされたオブジェクトのメタデータとタイム・スタンプが含まれています。",
      "type": "object",
      "properties": {
        "MetaData": {
          "$ref": "#/definitions/MetaData"
        },
        "Timestamp": {
          "type": "string",
          "format": "date-time"
        }
      },
      "x-go-package": "github.com/open-horizon/edge-sync-service/common"
    },
    "DBHealthStatusInfo": {
      "description": "DBHealthStatusInfo は、sync-service ノードのデータベースの正常性状況を記述します",
      "type": "object",
      "properties": {
        "dbReadFailures": {
          "type": "整数",
          "format": "uint32",
          "x-go-name": "DBReadFailures"
        },
        "dbStatus": {
          "type": "string",
          "x-go-name": "DBStatus"
        },
        "dbWriteFailures": {
          "type": "整数",
          "format": "uint32",
          "x-go-name": "DBWriteFailures"
        },
        "disconnectedFromDB": {
          "type": "ブール値",
          "x-go-name": "DisconnectedFromDB"
        },
        "lastDisconnectFromDBDuration": {
          "type": "整数",
          "format": "uint64",
          "x-go-name": "LastDisconnectFromDBDuration"
        },
        "timeSinceLastReadWriteError": {
          "type": "整数",
          "format": "uint64",
          "x-go-name": "TimeSinceLastReadWriteError"
        }
      },
      "x-go-package": "github.com/open-horizon/edge-sync-service/common"
    },
    "Destination": {
      "description": "各同期サービス・エッジ・ノード (ESS) は、ノードの ID、タイプ、および組織から構成されるアドレスを持っています。\nESS ノードは、MQTT または HTTP のいずれかを使用して CSS と通信します。",
      "type": "object",
      "title": "宛先は、同期サービス・ノードを記述します。",
      "required": [
        "destinationType",
        "destinationID",
        "communication",
        "codeVersion"
      ],
      "properties": {
        "codeVersion": {
          "description": "CodeVersion は、宛先が使用する同期サービス・コード・バージョンです",
          "type": "string",
          "x-go-name": "CodeVersion"
        },
        "communication": {
          "description": "Communication は、接続するために宛先が使用する通信プロトコルです (MQTT または HTTP)",
          "type": "string",
          "enum": [
            "HTTP",
            "MQTT"
          ],
          "x-go-name": "Communication"
        },
        "destinationID": {
          "description": "DestID は、宛先 ID です",
          "type": "string",
          "x-go-name": "DestID"
        },
        "destinationOrgID": {
          "description": "DestOrgID は、宛先組織 ID です。\n各同期サービス・オブジェクトは 1 つの組織に属します",
          "type": "string",
          "x-go-name": "DestOrgID"
        },
        "destinationType": {
          "description": "DestType は、宛先タイプです",
          "type": "string",
          "x-go-name": "DestType"
        }
      },
      "x-go-package": "github.com/open-horizon/edge-sync-service/common"
    },
    "DestinationsStatus": {
      "description": "DestinationsStatus は、宛先のオブジェクト配信状況を記述します。\nDestinationsStatus は、特定の宛先のオブジェクト配信状況に関する情報を提供します。\n状況は次のいずれかです:\nオブジェクトが宛先に配信済みであるかどうかの標識\npending - この宛先へのオブジェクトの配信が保留中であることを示します\ndelivering - この宛先にオブジェクトが配信中であることを示します\ndelivered - この宛先にオブジェクトは配信されたことを示します\nconsumed - この宛先によってオブジェクトがコンシュームされたことを示します\ndeleted - この宛先がオブジェクトの削除を確認したことを示します\nerror - この宛先からフィードバック・エラー・メッセージが受信されたことを示します",
      "type": "object",
      "required": [
        "destinationType",
        "destinationID",
        "status"
      ],
      "properties": {
        "destinationID": {
          "description": "DestID は、宛先 ID です",
          "type": "string",
          "x-go-name": "DestID"
        },
        "destinationType": {
          "description": "DestType は、宛先タイプです",
          "type": "string",
          "x-go-name": "DestType"
        },
        "message": {
          "description": "Message は、宛先のメッセージです",
          "type": "string",
          "x-go-name": "Message"
        },
        "status": {
          "description": "Status は、宛先の状況です",
          "type": "string",
          "enum": [
            "pending",
            "delivering",
            "delivered",
            "consumed",
            "deleted",
            "error"
          ],
          "x-go-name": "status"
        }
      },
      "x-go-package": "github.com/open-horizon/edge-sync-service/common"
    },
    "HealthStatusInfo": {
      "description": "HealthStatusInfo は、sync-service ノードの正常性状況を記述します",
      "type": "object",
      "properties": {
        "healthStatus": {
          "type": "string",
          "x-go-name": "HealthStatus"
        },
        "nodeType": {
          "type": "string",
          "x-go-name": "NodeType"
        },
        "upTime": {
          "type": "整数",
          "format": "uint64",
          "x-go-name": "UpTime"
        }
      },
      "x-go-package": "github.com/open-horizon/edge-sync-service/common"
    },
    "IOError": {
      "description": "IOError は、入出力が原因で要求が失敗した場合のエラーです",
      "type": "object",
      "properties": {
        "Message": {
          "type": "string"
        }
      },
      "x-go-package": "github.com/open-horizon/edge-sync-service/common"
    },
    "InternalError": {
      "description": "InternalError は、一般エラーです",
      "type": "object",
      "properties": {
        "Message": {
          "type": "string"
        }
      },
      "x-go-package": "github.com/open-horizon/edge-sync-service/common"
    },
    "Locks": {
      "description": "Locks は、オブジェクト・ロックのセットです",
      "type": "object",
      "x-go-package": "github.com/open-horizon/edge-sync-service/common"
    },
    "MQTTHealthStatusInfo": {
      "description": "MQTTHealthStatusInfo は、sync-service ノードの MQTT 接続の正常性状況を記述します",
      "type": "object",
      "properties": {
        "disconnectedFromMQTTBroker": {
          "type": "ブール値",
          "x-go-name": "DisconnectedFromMQTTBroker"
        },
        "lastDisconnectFromBrokerDuration": {
          "type": "整数",
          "format": "uint64",
          "x-go-name": "LastDisconnectFromBrokerDuration"
        },
        "mqttConnectionStatus": {
          "type": "string",
          "x-go-name": "MQTTConnectionStatus"
        },
        "publishFailures": {
          "type": "整数",
          "format": "uint32",
          "x-go-name": "PublishFailures"
        },
        "subscribeFailures": {
          "type": "整数",
          "format": "uint32",
          "x-go-name": "SubscribeFailures"
        },
        "timeSinceLastPublishError": {
          "type": "整数",
          "format": "uint64",
          "x-go-name": "TimeSinceLastPublishError"
        },
        "timeSinceLastSubscribeError": {
          "type": "整数",
          "format": "uint64",
          "x-go-name": "TimeSinceLastSubscribeError"
        }
      },
      "x-go-package": "github.com/open-horizon/edge-sync-service/common"
    },
    "MessagingGroup": {
      "description": "MessagingGroup maps organization to its messaging group",
      "type": "object",
      "properties": {
        "GroupName": {
          "type": "string"
        },
        "OrgID": {
          "type": "string"
        }
      },
      "x-go-package": "github.com/open-horizon/edge-sync-service/common"
    },
    "MetaData": {
      "description": "Every object includes metadata (mandatory) and data (optional). The metadata and data can be updated independently.\nEach sync service node (ESS) has an address that is composed of the node's ID, Type, and Organization.\nTo send an object to a single node set the destinationType and destinationID fields to match the node's Type and ID.\nTo send an object to all the nodes of a certain type set destinationType to the appropriate type and leave destinationID empty.\nIf both destinationType and destinationID are empty the object is sent to all nodes.",
      "type": "object",
      "title": "MetaData is the metadata that identifies and defines the sync service object.",
      "required": [
        "objectID",
        "objectType"
      ],
      "properties": {
        "activationTime": {
          "description": "ActivationTime is a timestamp/date as to when this object should automatically be activated.\nThe timestamp should be provided in RFC3339 format.\nOptional field, if omitted (and Inactive is true) the object is never automatically activated.",
          "type": "string",
          "x-go-name": "ActivationTime"
        },
        "autodelete": {
          "description": "AutoDelete is a flag indicating whether to delete the object after it is delivered to all its destinations from the DestinationsList.\nOptional field, default is false (do not delete).\nThis field is used only when working with the CSS. Objects are always deleted after delivery on the ESS.",
          "type": "ブール値",
          "x-go-name": "AutoDelete"
        },
        "chunkSize": {
          "description": "ChunkSize is an internal field indicating the maximal message payload size.\nThis field should not be set by users.",
          "type": "整数",
          "format": "int64",
          "x-go-name": "ChunkSize"
        },
        "consumers": {
          "description": "ExpectedConsumers is the number of applications that are expected to indicate that they have consumed the object.\nOptional field, default is 1.",
          "type": "整数",
          "format": "int64",
          "x-go-name": "ExpectedConsumers"
        },
        "dataID": {
          "description": "DataID is an internal data ID.\nThis field should not be set by users.",
          "type": "整数",
          "format": "int64",
          "x-go-name": "DataID"
        },
        "deleted": {
          "description": "Deleted is a flag indicating to applications polling for updates that this object has been deleted.\nRead only field, should not be set by users.",
          "type": "ブール値",
          "x-go-name": "Deleted"
        },
        "description": {
          "description": "Description is a textual description of the object.\nOptional field, empty by default.",
          "type": "string",
          "x-go-name": "説明"
        },
        "destinationDataUri": {
          "description": "DestinationDataURI is a URI indicating where the receiver of the object should store it.\nCurrently only file URIs are supported.\nThis field is available only when working with the CSS.\nOptional field, if omitted the object is stored in the node's internal storage.",
          "type": "string",
          "x-go-name": "DestinationDataURI"
        },
        "destinationID": {
          "description": "DestID is the ID of the destination. If omitted the object is sent to all ESSs with the same DestType.\nThis field is ignored when working with ESS (the destination is the CSS).",
          "type": "string",
          "x-go-name": "DestID"
        },
        "destinationOrgID": {
          "description": "DestOrgID is the organization ID of the object (an object belongs to exactly one organization).\nThis field is ignored when working with ESS (the ESS's orgID is used).",
          "type": "string",
          "x-go-name": "DestOrgID"
        },
        "destinationPolicy": {
          "$ref": "#/definitions/Policy"
        },
        "destinationType": {
          "description": "DestType is the type of destination to send the object to.\nIf omitted (and if DestinationsList is omitted too) the object is broadcasted to all known destinations.\nThis field is ignored when working with ESS (the destination is always the CSS).",
          "type": "string",
          "x-go-name": "DestType"
        },
        "destinationsList": {
          "description": "DestinationsList is the list of destinations as type:id pairs to send the object to.\nWhen a DestinationsList is provided DestType and DestID must be omitted.\nThis field is ignored when working with ESS (the destination is always the CSS).",
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-go-name": "DestinationsList"
        },
        "expiration": {
          "description": "Expiration is a timestamp/date indicating when the object expires.\nWhen the object expires it is automatically deleted.\nThe timestamp should be provided in RFC3339 format.\nThis field is available only when working with the CSS.\nOptional field, if omitted the object doesn't expire.",
          "type": "string",
          "x-go-name": "有効期限"
        },
        "inactive": {
          "description": "Inactive is a flag indicating that this object is inactive for now.\nAn object can be created as inactive which means it is not delivered to its destination. The object can be activated later.\nOptional field, default is false (object active).",
          "type": "ブール値",
          "x-go-name": "Inactive"
        },
        "instanceID": {
          "description": "InstanceID is an internal instance ID.\nThis field should not be set by users.",
          "type": "整数",
          "format": "int64",
          "x-go-name": "InstanceID"
        },
        "link": {
          "description": "Link is a link to where the data for this object can be fetched from.\nThe link is set and used by the application. The sync service does not access the link.\nOptional field, if omitted the data must be provided by the application.",
          "type": "string",
          "x-go-name": "Link"
        },
        "metaOnly": {
          "description": "MetaOnly is a flag that indicates that this update is only of the metadata. The current object's data is left unchanged.\nOptional field, default is false (both data and metadata are updated).",
          "type": "ブール値",
          "x-go-name": "MetaOnly"
        },
        "noData": {
          "description": "NoData is a flag indicating that there is no data for this object.\nObjects with no data can be used, for example, to send notifications.\nOptional field, default is false (object includes data).",
          "type": "ブール値",
          "x-go-name": "NoData"
        },
        "objectID": {
          "description": "ObjectID is a unique identifier of the object",
          "type": "string",
          "x-go-name": "ObjectID"
        },
        "objectSize": {
          "description": "ObjectSize is an internal field indicating the size of the object's data.\nThis field should not be set by users.",
          "type": "整数",
          "format": "int64",
          "x-go-name": "ObjectSize"
        },
        "objectType": {
          "description": "ObjectType is the type of the object.\nThe type is used to group multiple objects, for example when checking for object updates.",
          "type": "string",
          "x-go-name": "ObjectType"
        },
        "originID": {
          "description": "OriginID is the ID of origin of the object. Set by the internal code.\nRead only field, should not be set by users.",
          "type": "string",
          "x-go-name": "OriginID"
        },
        "originType": {
          "description": "OriginType is the type of origin of the object. Set by the internal code.\nRead only field, should not be set by users.",
          "type": "string",
          "x-go-name": "OriginType"
        },
        "ownerID": {
          "description": "OwnerID is an internal field indicating who creates the object\nThis field should not be set by users",
          "type": "string",
          "x-go-name": "OwnerID"
        },
        "sourceDataUri": {
          "description": "SourceDataURI is a URI indicating where the sender of the object should read the data from.\nCurrently only file URIs are supported.\nThis field is available only when working with the ESS.\nOptional field, if omitted the object's data should be provided by the user.",
          "type": "string",
          "x-go-name": "SourceDataURI"
        },
        "version": {
          "description": "Version is the object's version (as used by the application).\nOptional field, empty by default.",
          "type": "string",
          "x-go-name": "バージョン"
        }
      },
      "x-go-package": "github.com/open-horizon/edge-sync-service/common"
    },
    "NotFound": {
      "description": "NotFound is the error returned if an object wasn't found",
      "type": "object",
      "x-go-package": "github.com/open-horizon/edge-sync-service/common"
    },
    "NotificationInfo": {
      "description": "NotificationInfo contains information about a message to send to the other side",
      "type": "object",
      "properties": {
        "DataID": {
          "type": "整数",
          "format": "int64"
        },
        "DestID": {
          "type": "string"
        },
        "DestType": {
          "type": "string"
        },
        "InstanceID": {
          "type": "整数",
          "format": "int64"
        },
        "MetaData": {
          "$ref": "#/definitions/MetaData"
        },
        "NotificationTopic": {
          "type": "string"
        }
      },
      "x-go-package": "github.com/open-horizon/edge-sync-service/common"
    },
    "ObjectDestinationPolicy": {
      "type": "object",
      "title": "ObjectDestinationPolicy contains information about an object that has a Destination Policy.",
      "required": [
        "orgID",
        "objectType",
        "objectID"
      ],
      "properties": {
        "destinationPolicy": {
          "$ref": "#/definitions/Policy"
        },
        "destinations": {
          "description": "Destinations is the list of the object's current destinations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/DestinationsStatus"
          },
          "x-go-name": "Destinations"
        },
        "objectID": {
          "description": "ObjectID is a unique identifier of the object",
          "type": "string",
          "x-go-name": "ObjectID"
        },
        "objectType": {
          "description": "ObjectType is the type of the object.\nThe type is used to group multiple objects, for example when checking for object updates.",
          "type": "string",
          "x-go-name": "ObjectType"
        },
        "orgID": {
          "description": "OrgID is the organization ID of the object (an object belongs to exactly one organization).",
          "type": "string",
          "x-go-name": "OrgID"
        }
      },
      "x-go-package": "github.com/open-horizon/edge-sync-service/common"
    },
    "ObjectStatus": {
      "description": "ObjectStatus describes the delivery status of an object for a destination\nThe status can be one of the following:\nIndication whether the object has been delivered to the destination\ndelivering - indicates that the object is being delivered\ndelivered - indicates that the object was delivered\nconsumed - indicates that the object was consumed\ndeleted - indicates that this destination acknowledged the deletion of the object\nerror - indicates that a feedback error message was received",
      "type": "object",
      "required": [
        "objectType",
        "objectID",
        "status"
      ],
      "properties": {
        "objectID": {
          "description": "ObjectID is the object ID",
          "type": "string",
          "x-go-name": "ObjectID"
        },
        "objectType": {
          "description": "ObjectType is the object type",
          "type": "string",
          "x-go-name": "ObjectType"
        },
        "orgID": {
          "description": "OrgID is the organization ID of the organization",
          "type": "string",
          "x-go-name": "OrgID"
        },
        "status": {
          "description": "Status is the object status for this destination",
          "type": "string",
          "enum": [
            "delivering",
            "delivered",
            "consumed",
            "deleted",
            "error"
          ],
          "x-go-name": "status"
        }
      },
      "x-go-package": "github.com/open-horizon/edge-sync-service/common"
    },
    "Organization": {
      "description": "Organization contains organization's information",
      "type": "object",
      "properties": {
        "address": {
          "description": "Address is the broker address to be used when connecting to this organization",
          "type": "string",
          "x-go-name": "Address"
        },
        "orgID": {
          "description": "OrgID is the organization ID of the organization",
          "type": "string",
          "x-go-name": "OrgID"
        },
        "password": {
          "description": "Password is the password to be used when connecting to this organization",
          "type": "string",
          "x-go-name": "パスワード"
        },
        "user": {
          "description": "User is the user name to be used when connecting to this organization",
          "type": "string",
          "x-go-name": "ユーザー"
        }
      },
      "x-go-package": "github.com/open-horizon/edge-sync-service/common"
    },
    "PathError": {
      "description": "PathError is the error for path issues",
      "type": "object",
      "properties": {
        "Message": {
          "type": "string"
        }
      },
      "x-go-package": "github.com/open-horizon/edge-sync-service/common"
    },
    "Policy": {
      "description": "Policy describes a policy made up of a set of properties and constraints",
      "type": "object",
      "properties": {
        "constraints": {
          "description": "Constraints is a set of expressions that form the constraints for the policy",
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-go-name": "制約"
        },
        "properties": {
          "description": "Properties is the set of properties for a particular policy",
          "type": "array",
          "items": {
            "$ref": "#/definitions/PolicyProperty"
          },
          "x-go-name": "プロパティー"
        },
        "services": {
          "description": "Services is the list of services this object has affinity for",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ServiceID"
          },
          "x-go-name": "サービス"
        },
        "timestamp": {
          "description": "Timestamp indicates when the policy was last updated (result of time.Now().UTC().UnixNano())",
          "type": "整数",
          "format": "int64",
          "x-go-name": "タイム・スタンプ"
        }
      },
      "x-go-package": "github.com/open-horizon/edge-sync-service/common"
    },
    "PolicyProperty": {
      "description": "PolicyProperty is a property in a policy",
      "type": "object",
      "required": [
        "name",
        "value"
      ],
      "properties": {
        "name": {
          "description": "Name is the name of the property",
          "type": "string",
          "x-go-name": "名前"
        },
        "type": {
          "description": "Type is the type of the property.\nIt is only required where the system can't interpret the value correctly by context.",
          "type": "string",
          "x-go-name": "タイプ"
        },
        "value": {
          "description": "Value is the value of the property",
          "type": "object",
          "x-go-name": "値"
        }
      },
      "x-go-package": "github.com/open-horizon/edge-sync-service/common"
    },
    "SecurityError": {
      "description": "SecurityError is the error for requests failed because of security",
      "type": "object",
      "properties": {
        "Message": {
          "type": "string"
        }
      },
      "x-go-package": "github.com/open-horizon/edge-sync-service/common"
    },
    "ServiceID": {
      "description": "ServiceID contains the ID of a service to which an object may have affinity for",
      "type": "object",
      "properties": {
        "arch": {
          "description": "Arch is the architecture of the service",
          "type": "string",
          "x-go-name": "Arch"
        },
        "orgID": {
          "description": "OrgID is the organization ID of the service",
          "type": "string",
          "x-go-name": "OrgID"
        },
        "serviceName": {
          "description": "ServiceName is the name of the service",
          "type": "string",
          "x-go-name": "ServiceName"
        },
        "version": {
          "description": "Version is the version of the service",
          "type": "string",
          "x-go-name": "バージョン"
        }
      },
      "x-go-package": "github.com/open-horizon/edge-sync-service/common"
    },
    "StoredOrganization": {
      "description": "StoredOrganization contains organization and its update timestamp",
      "type": "object",
      "properties": {
        "Org": {
          "$ref": "#/definitions/Organization"
        },
        "Timestamp": {
          "type": "string",
          "format": "date-time"
        }
      },
      "x-go-package": "github.com/open-horizon/edge-sync-service/common"
    },
    "SyncServiceVersion": {
      "description": "SyncServiceVersion is the current version of the Sync-Service",
      "type": "object",
      "properties": {
        "Major": {
          "type": "整数",
          "format": "uint32"
        },
        "Minor": {
          "type": "整数",
          "format": "uint32"
        }
      },
      "x-go-package": "github.com/open-horizon/edge-sync-service/common"
    },
    "UsageInfo": {
      "description": "UsageInfo describes the usage of the sync-service node",
      "type": "object",
      "properties": {
        "clientRequests": {
          "type": "整数",
          "format": "uint64",
          "x-go-name": "ClientRequests"
        },
        "registeredESS": {
          "type": "整数",
          "format": "uint32",
          "x-go-name": "RegisteredESS"
        },
        "storedObjects": {
          "type": "整数",
          "format": "uint32",
          "x-go-name": "StoredObjects"
        }
      },
      "x-go-package": "github.com/open-horizon/edge-sync-service/common"
    },
    "bulkACLUpdate": {
      "description": "bulkACLUpdate is the payload used when performing a bulk update on an ACL (either adding usernames to an\nACL or removing usernames from an ACL.",
      "type": "object",
      "properties": {
        "action": {
          "description": "Action is an action, which can be either add (to add usernames) or remove (to remove usernames)",
          "type": "string",
          "x-go-name": "アクション"
        },
        "usernames": {
          "description": "Usernames is an array of usernames to be added or removed from the ACL as appropriate",
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-go-name": "Usernames"
        }
      },
      "x-go-package": "github.com/open-horizon/edge-sync-service/core/base"
    },
    "healthReport": {
      "type": "object",
      "properties": {
        "dbHealth": {
          "$ref": "#/definitions/DBHealthStatusInfo"
        },
        "general": {
          "$ref": "#/definitions/HealthStatusInfo"
        },
        "mqttHealth": {
          "$ref": "#/definitions/MQTTHealthStatusInfo"
        },
        "usage": {
          "$ref": "#/definitions/UsageInfo"
        }
      },
      "x-go-package": "github.com/open-horizon/edge-sync-service/core/base"
    },
    "objectUpdate": {
      "description": "objectUpdate includes the object's metadata and data\nA sync service object includes metadata and optionally binary data.\nWhen an object is created the metadata must be provided. The metadata and the data can then be updated together or one at a time.",
      "type": "object",
      "properties": {
        "data": {
          "description": "Data is a the object's binary data",
          "type": "array",
          "items": {
            "type": "整数",
            "format": "uint8"
          },
          "x-go-name": "データ"
        },
        "meta": {
          "$ref": "#/definitions/MetaData"
        }
      },
      "x-go-package": "github.com/open-horizon/edge-sync-service/core/base"
    },
    "organization": {
      "description": "organization includes the organization's id and broker address",
      "type": "object",
      "properties": {
        "address": {
          "description": "Broker address",
          "type": "string",
          "x-go-name": "Address"
        },
        "org-id": {
          "description": "Organization OD",
          "type": "string",
          "x-go-name": "OrgID"
        }
      },
      "x-go-package": "github.com/open-horizon/edge-sync-service/core/base"
    },
    "webhookUpdate": {
      "description": "webhookUpdate includes the webhook's action and URL\nA webhook can be used to allow the sync service to invoke actions when new information becomes available.\nAn application can choose between using a webhook and periodically polling the sync service for updates.",
      "type": "object",
      "properties": {
        "action": {
          "description": "Action is an action can be either register (create/update a webhook) or delete (delete the webhook)",
          "type": "string",
          "x-go-name": "アクション"
        },
        "url": {
          "description": "URL is the URL to invoke when new information for the object is available",
          "type": "string",
          "x-go-name": "URL"
        }
      },
      "x-go-package": "github.com/open-horizon/edge-sync-service/core/base"
    }
  }
}
