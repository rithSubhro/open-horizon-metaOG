{
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "schemes": [
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "description": "Package principal du service de synchronisation de périphérie",
    "title": "Service de synchronisation de périphérie",
    "version": "0.0.1"
  },
  "host": "localhost",
  "basePath": "/",
  "paths": {
    "/api/v1/destinations/{orgID}": {
      "get": {
        "description": "Fournit une liste de destinations pour une organisation, par exemple, des noeuds du composant ESS (appartenant à orgID) ayant été enregistrés auprès du composant CSS.\nIl s'agit d'une API CSS uniquement.",
        "produces": [
          "application/json",
          "text/plain"
        ],
        "tags": [
          "CSS"
        ],
        "summary": "Liste de toutes les organisations.",
        "operationId": "handleDestinations",
        "parameters": [
          {
            "type": "string",
            "description": "orgID des destinations à renvoyer.",
            "name": "orgID",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Réponse de destinations",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Destination"
              }
            }
          },
          "404": {
            "description": "Aucune destination n'a été trouvée",
            "schema": {
              "type": "string"
            }
          },
          "500": {
            "description": "Echec de l'extraction des destinations",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/api/v1/destinations/{orgID}/{destType}/{destID}/objects": {
      "get": {
        "description": "Fournit une liste d'objets utilisés par le noeud du composant ESS de destination.\nIl s'agit d'une API CSS uniquement.",
        "produces": [
          "application/json",
          "text/plain"
        ],
        "tags": [
          "CSS"
        ],
        "summary": "Liste de tous les objets utilisés par la destination.",
        "operationId": "handleDestinationObjects",
        "parameters": [
          {
            "type": "string",
            "description": "orgID de la destination pour laquelle extraire les objets.",
            "name": "orgID",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Type de la destination pour laquelle extraire les objets.",
            "name": "destType",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "ID de la destination pour laquelle extraire les objets.",
            "name": "destID",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Réponse des objets",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ObjectStatus"
              }
            }
          },
          "404": {
            "description": "Aucun objet n'a été trouvé",
            "schema": {
              "type": "string"
            }
          },
          "500": {
            "description": "Echec de l'extraction des objets",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/api/v1/health": {
      "get": {
        "description": "Permet d'obtenir l'état de santé du noeud du service de synchronisation.",
        "produces": [
          "application/json",
          "text/plain"
        ],
        "tags": [
          "CSS",
          "ESS"
        ],
        "summary": "Permet d'obtenir l'état de santé du noeud du service de synchronisation.",
        "operationId": "handleHealth",
        "parameters": [
          {
            "type": "boolean",
            "description": "Permet d'inclure ou non l'état de santé détaillé. ",
            "name": "details",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Etat de santé",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/healthReport"
              }
            }
          },
          "500": {
            "description": "Echec de l'envoi de l'état de santé.",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/api/v1/objects/{objectType}": {
      "get": {
        "description": "Permet d'obtenir des objets correspondant au type d'objet spécifié. Vous pouvez soit obtenir tous les objets ou seulement ceux qui ont des mises à jour en attente (non utilisées).\nEn règle générale, une application appelle régulièrement l'API la plus récente pour vérifier la présence de mises à jour (une autre solution consiste à utiliser un webhook).",
        "produces": [
          "application/json",
          "text/plain"
        ],
        "tags": [
          "ESS"
        ],
        "summary": "Permet d'obtenir des objets du type spécifié.",
        "operationId": "handleListObjects",
        "parameters": [
          {
            "type": "string",
            "description": "Type d'objet des objets à renvoyer. ",
            "name": "objectType",
            "in": "path",
            "required": true
          },
          {
            "type": "boolean",
            "description": "Lors du renvoi d'objets mis à jour uniquement, permet d'inclure ou non les objets qui ont été marqués comme reçus par l'application.",
            "name": "received",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Réponse d'objets mis à jour.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/MetaData"
              }
            }
          },
          "404": {
            "description": "Aucun objet mis à jour n'a été trouvé. ",
            "schema": {
              "type": "string"
            }
          },
          "500": {
            "description": "Echec de l'extraction des objets mis à jour.",
            "schema": {
              "type": "string"
            }
          }
        }
      },
      "put": {
        "description": "Enregistre ou supprime un webhook pour le type d'objet spécifié.\nUn webhook permet de traiter les notifications de mise à jour des objets correspondant au type d'objet spécifié.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "text/plain"
        ],
        "tags": [
          "ESS"
        ],
        "summary": "Enregistre ou supprime un webhook.",
        "operationId": "handleWebhook",
        "parameters": [
          {
            "type": "string",
            "description": "Type d'objet des objets destinés au webhook.",
            "name": "objectType",
            "in": "path",
            "required": true
          },
          {
            "description": "Données du webhook.",
            "name": "payload",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/webhookUpdate"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Le webhook a été enregistré/supprimé.",
            "schema": {
              "type": "string"
            }
          },
          "500": {
            "description": "Echec de la mise à jour des données du webhook. ",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/api/v1/objects/{objectType}/{objectID}": {
      "get": {
        "description": "Permet d'obtenir les métadonnées d'un objet correspondant au type d'objet et à l'ID d'objet spécifiés.\nLes métadonnées indiquent si les objets incluent des données pouvant être obtenues à l'aide de l'API appropriée.",
        "produces": [
          "application/json",
          "text/plain"
        ],
        "tags": [
          "ESS"
        ],
        "summary": "Permet d'obtenir un objet.",
        "operationId": "handleGetObject",
        "parameters": [
          {
            "type": "string",
            "description": "Type de l'objet à renvoyer.",
            "name": "objectType",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "ID de l'objet à renvoyer.",
            "name": "objectID",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Réponse d'objet",
            "schema": {
              "$ref": "#/definitions/MetaData"
            }
          },
          "404": {
            "description": "L'objet est introuvable.",
            "schema": {
              "type": "string"
            }
          },
          "500": {
            "description": "Echec de l'extraction de l'objet.",
            "schema": {
              "type": "string"
            }
          }
        }
      },
      "put": {
        "description": "Permet de mettre à jour/créer l'objet correspondant au type d'objet et à l'ID d'objet spécifiés.\nSi un objet du même type et du même ID existe, il est mis à jour. Sinon, un nouvel objet est créé.",
        "produces": [
          "text/plain"
        ],
        "tags": [
          "ESS"
        ],
        "summary": "Mise à jour/création d'un objet.",
        "operationId": "handleUpdateObject",
        "parameters": [
          {
            "type": "string",
            "description": "Type de l'objet à mettre à jour/créer. ",
            "name": "objectType",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "ID de l'objet à mettre à jour/créer. ",
            "name": "objectID",
            "in": "path",
            "required": true
          },
          {
            "name": "payload",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/objectUpdate"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "L'objet a été mis à jour.",
            "schema": {
              "type": "string"
            }
          },
          "500": {
            "description": "Echec de la mise à jour/création de l'objet.",
            "schema": {
              "type": "string"
            }
          }
        }
      },
      "delete": {
        "description": "Permet de supprimer l'objet correspondant au type d'objet et à l'ID d'objet spécifié.\nLes destinations de l'objet seront informées que l'objet a été supprimé.",
        "produces": [
          "text/plain"
        ],
        "tags": [
          "ESS"
        ],
        "summary": "Suppression d'un objet.",
        "operationId": "handleDeleteObject",
        "parameters": [
          {
            "type": "string",
            "description": "Type de l'objet à supprimer.",
            "name": "objectType",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "ID de l'objet à supprimer.",
            "name": "objectID",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "L'objet a été supprimé.",
            "schema": {
              "type": "string"
            }
          },
          "500": {
            "description": "Echec de la suppression de l'objet.",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/api/v1/objects/{objectType}/{objectID}/activate": {
      "put": {
        "description": "Permet de marquer l'objet correspondant au type d'objet et à l'ID d'objet spécifiés comme étant actif.\nUn objet peut être créé comme inactif, ce qui signifie qu'il n'est pas distribué aux destinations attendues.\nCette API est utilisée pour activer de tels objets et démarrer la distribution de l'objet à ses destinations.",
        "produces": [
          "text/plain"
        ],
        "tags": [
          "ESS"
        ],
        "summary": "Marquage d'un objet comme étant actif.",
        "operationId": "handleActivateObject",
        "parameters": [
          {
            "type": "string",
            "description": "Type de l'objet à marquer comme étant actif.",
            "name": "objectType",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "ID de l'objet à marquer comme étant actif.",
            "name": "objectID",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "L'objet a été marqué comme étant actif. ",
            "schema": {
              "type": "string"
            }
          },
          "500": {
            "description": "Echec du marquage de l'objet comme étant actif. ",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/api/v1/objects/{objectType}/{objectID}/consumed": {
      "put": {
        "description": "Permet de marquer l'objet correspondant au type d'objet et à l'ID d'objet spécifié comme ayant été utilisé par l'application.\nLorsque l'objet a été marqué comme ayant été utilisé, il n'est pas redistribué à l'application (même si le service de synchronisation est redémarré).",
        "produces": [
          "text/plain"
        ],
        "tags": [
          "ESS"
        ],
        "summary": "Marquage d'un objet comme ayant été utilisé.",
        "operationId": "handleObjectConsumed",
        "parameters": [
          {
            "type": "string",
            "description": "Type de l'objet à marquer comme ayant été utilisé.",
            "name": "objectType",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "ID de l'objet à marquer comme ayant été utilisé.",
            "name": "objectID",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "L'objet a été marqué comme ayant été utilisé.",
            "schema": {
              "type": "string"
            }
          },
          "500": {
            "description": "Echec du marquage de l'objet utilisé. ",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/api/v1/objects/{objectType}/{objectID}/data": {
      "get": {
        "description": "Permet d'obtenir les données de l'objet correspondant au type d'objet et à l'ID d'objet spécifiés.\nLes métadonnées de l'objet indiquent si l'objet contient des données (noData a la valeur false).",
        "produces": [
          "application/octet-stream",
          "text/plain"
        ],
        "tags": [
          "ESS"
        ],
        "summary": "Obtention des données d'un objet.",
        "operationId": "handleObjectGetData",
        "parameters": [
          {
            "type": "string",
            "description": "Type de l'objet dont les données seront extraites.",
            "name": "objectType",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "ID de l'objet dont les données seront extraites.",
            "name": "objectID",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Données de l'objet",
            "schema": {
              "type": "string",
              "format": "binary"
            }
          },
          "500": {
            "description": "Echec de l'extraction des données de l'objet.",
            "schema": {
              "type": "string"
            }
          }
        }
      },
      "put": {
        "description": "Mise à jour des données de l'objet correspondant au type d'objet et à l'ID d'objet spécifié.\nLes données peuvent être mises à jour sans modifier les métadonnées de l'objet.",
        "consumes": [
          "application/octet-stream"
        ],
        "produces": [
          "text/plain"
        ],
        "tags": [
          "ESS"
        ],
        "summary": "Mise à jour des données d'un objet.",
        "operationId": "handleObjectPutData",
        "parameters": [
          {
            "type": "string",
            "description": "Type de l'objet dont les données seront mises à jour.",
            "name": "objectType",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "ID de l'objet dont les données seront mises à jour.",
            "name": "objectID",
            "in": "path",
            "required": true
          },
          {
            "description": "Nouvelles données de l'objet. Lorsque vous lisez les octets de données à partir d'un fichier, veuillez définir application/octet-stream sur Content-Type dans l'en-tête.",
            "name": "payload",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string",
              "format": "binary"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Les données de l'objet ont été mises à jour. ",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "L'objet spécifié n'existe pas. ",
            "schema": {
              "type": "string"
            }
          },
          "500": {
            "description": "Echec de la mise à jour des données de l'objet. ",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/api/v1/objects/{objectType}/{objectID}/policyreceived": {
      "put": {
        "description": "Permet de marquer l'objet correspondant au type d'objet et à l'ID d'objet spécifiés comme ayant reçu sa règle de destination.\nLorsque c'est fait, l'objet n'est plus distribué à l'application qui dresse la liste des objets avec\nune règle de destination à moins d'ajouter \"received=true\" aux paramètres de requête.",
        "produces": [
          "text/plain"
        ],
        "tags": [
          "ESS"
        ],
        "summary": "Marquage de la règle de destination d'un objet comme ayant été reçue.",
        "operationId": "handlePolicyReceived",
        "parameters": [
          {
            "type": "string",
            "description": "Type de l'objet à marquer comme ayant reçu sa règle de destination.",
            "name": "objectType",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "ID de l'objet à marquer comme ayant reçu sa règle de destination.",
            "name": "objectID",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "L'objet a été marqué comme ayant reçu sa règle de destination.",
            "schema": {
              "type": "string"
            }
          },
          "500": {
            "description": "Echec du marquage de l'objet comme ayant reçu sa règle de destination.",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/api/v1/objects/{objectType}/{objectID}/received": {
      "put": {
        "description": "Permet de marquer l'objet correspondant au type d'objet et à l'ID d'objet comme ayant été reçu par l'application.\nLorsque c'est le cas, l'objet n'est redistribué à l'application qu'à condition d'avoir été spécifié dans la requête des objets.",
        "produces": [
          "text/plain"
        ],
        "tags": [
          "ESS"
        ],
        "summary": "Marquage d'un objet comme ayant été reçu.",
        "operationId": "handleObjectReceived",
        "parameters": [
          {
            "type": "string",
            "description": "Type de l'objet à marquer comme ayant été reçu. ",
            "name": "objectType",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "ID de l'objet à marquer comme ayant été reçu.",
            "name": "objectID",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "L'objet a été marqué comme ayant été reçu. ",
            "schema": {
              "type": "string"
            }
          },
          "500": {
            "description": "Echec du marquage de l'objet comme ayant été reçu. ",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/api/v1/objects/{objectType}/{objectID}/status": {
      "get": {
        "description": "Permet d'obtenir le statut de l'objet correspondant au type d'objet et à l'ID d'objet spécifiés.\nLe statut accepte les valeurs suivantes :\nnotReady - L'objet n'est pas prêt à être envoyé aux destinations.\nready - L'objet est prêt à être envoyé aux destinations.\nreceived - Les métadonnées de l'objet ont été reçues, mais pas toutes. \ncompletelyReceived - L'objet a été entièrement reçu (métadonnées et données).\nconsumed - L'objet a été utilisé par l'application.\ndeleted - L'objet a été supprimé.",
        "produces": [
          "text/plain"
        ],
        "tags": [
          "ESS"
        ],
        "summary": "Obtention du statut d'un objet.",
        "operationId": "handleObjectStatus",
        "parameters": [
          {
            "type": "string",
            "description": "Type de l'objet dont le statut sera extrait.",
            "name": "objectType",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "ID de l'objet dont le statut sera extrait. ",
            "name": "objectID",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Statut de l'objet",
            "schema": {
              "type": "string",
              "enum": [
                "notReady",
                "ready",
                "received",
                "completelyReceived",
                "consumed",
                "deleted"
              ]
            }
          },
          "500": {
            "description": "Echec de l'extraction du statut de l'objet. ",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/api/v1/objects/{orgID}/{objectType}": {
      "get": {
        "description": "Permet d'obtenir des objets correspondant au type d'objet spécifié. Vous pouvez soit obtenir tous les objets ou seulement ceux qui ont des mises à jour en attente (non utilisées).\nEn règle générale, une application appelle régulièrement l'API la plus récente pour vérifier la présence de mises à jour (une autre solution consiste à utiliser un webhook).",
        "produces": [
          "application/json",
          "text/plain"
        ],
        "tags": [
          "CSS"
        ],
        "summary": "Permet d'obtenir des objets du type spécifié.",
        "operationId": "handleListObjects",
        "parameters": [
          {
            "type": "string",
            "description": "orgID des objets à renvoyer. ",
            "name": "orgID",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Type d'objet des objets à renvoyer. ",
            "name": "objectType",
            "in": "path",
            "required": true
          },
          {
            "type": "boolean",
            "description": "Lors du renvoi d'objets mis à jour uniquement, permet d'inclure ou non les objets qui ont été marqués comme reçus par l'application.",
            "name": "received",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Réponse d'objets mis à jour.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/MetaData"
              }
            }
          },
          "404": {
            "description": "Aucun objet mis à jour n'a été trouvé. ",
            "schema": {
              "type": "string"
            }
          },
          "500": {
            "description": "Echec de l'extraction des objets mis à jour.",
            "schema": {
              "type": "string"
            }
          }
        }
      },
      "put": {
        "description": "Enregistre ou supprime un webhook pour le type d'objet spécifié.\nUn webhook permet de traiter les notifications de mise à jour des objets correspondant au type d'objet spécifié.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "text/plain"
        ],
        "tags": [
          "CSS"
        ],
        "summary": "Enregistre ou supprime un webhook.",
        "operationId": "handleWebhook",
        "parameters": [
          {
            "type": "string",
            "description": "orgID des objets destinés au webhook.",
            "name": "orgID",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Type d'objet des objets destinés au webhook.",
            "name": "objectType",
            "in": "path",
            "required": true
          },
          {
            "description": "Données du webhook.",
            "name": "payload",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/webhookUpdate"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Le webhook a été enregistré/supprimé.",
            "schema": {
              "type": "string"
            }
          },
          "500": {
            "description": "Echec de la mise à jour des données du webhook. ",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/api/v1/objects/{orgID}/{objectType}/{objectID}": {
      "get": {
        "description": "Permet d'obtenir les métadonnées d'un objet correspondant au type d'objet et à l'ID d'objet spécifiés.\nLes métadonnées indiquent si les objets incluent des données pouvant être obtenues à l'aide de l'API appropriée.",
        "produces": [
          "application/json",
          "text/plain"
        ],
        "tags": [
          "CSS"
        ],
        "summary": "Permet d'obtenir un objet.",
        "operationId": "handleGetObject",
        "parameters": [
          {
            "type": "string",
            "description": "orgID de l'objet à renvoyer.",
            "name": "orgID",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Type de l'objet à renvoyer.",
            "name": "objectType",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "ID de l'objet à renvoyer.",
            "name": "objectID",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Réponse d'objet",
            "schema": {
              "$ref": "#/definitions/MetaData"
            }
          },
          "404": {
            "description": "L'objet est introuvable.",
            "schema": {
              "type": "string"
            }
          },
          "500": {
            "description": "Echec de l'extraction de l'objet.",
            "schema": {
              "type": "string"
            }
          }
        }
      },
      "put": {
        "description": "Permet de mettre à jour/créer l'objet correspondant au type d'objet et à l'ID d'objet spécifiés.\nSi un objet du même type et du même ID existe, il est mis à jour. Sinon, un nouvel objet est créé.",
        "produces": [
          "text/plain"
        ],
        "tags": [
          "CSS"
        ],
        "summary": "Mise à jour/création d'un objet.",
        "operationId": "handleUpdateObject",
        "parameters": [
          {
            "type": "string",
            "description": "orgID de l'objet à mettre à jour/créer.",
            "name": "orgID",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Type de l'objet à mettre à jour/créer. ",
            "name": "objectType",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "ID de l'objet à mettre à jour/créer. ",
            "name": "objectID",
            "in": "path",
            "required": true
          },
          {
            "name": "payload",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/objectUpdate"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "L'objet a été mis à jour.",
            "schema": {
              "type": "string"
            }
          },
          "500": {
            "description": "Echec de la mise à jour/création de l'objet.",
            "schema": {
              "type": "string"
            }
          }
        }
      },
      "delete": {
        "description": "Permet de supprimer l'objet correspondant au type d'objet et à l'ID d'objet spécifié.\nLes destinations de l'objet seront informées que l'objet a été supprimé.",
        "produces": [
          "text/plain"
        ],
        "tags": [
          "CSS"
        ],
        "summary": "Suppression d'un objet.",
        "operationId": "handleDeleteObject",
        "parameters": [
          {
            "type": "string",
            "description": "orgID de l'objet à supprimer.",
            "name": "orgID",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Type de l'objet à supprimer.",
            "name": "objectType",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "ID de l'objet à supprimer.",
            "name": "objectID",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "L'objet a été supprimé.",
            "schema": {
              "type": "string"
            }
          },
          "500": {
            "description": "Echec de la suppression de l'objet.",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/api/v1/objects/{orgID}/{objectType}/{objectID}/activate": {
      "put": {
        "description": "Permet de marquer l'objet correspondant au type d'objet et à l'ID d'objet spécifiés comme étant actif.\nUn objet peut être créé comme inactif, ce qui signifie qu'il n'est pas distribué aux destinations attendues.\nCette API est utilisée pour activer de tels objets et démarrer la distribution de l'objet à ses destinations.",
        "produces": [
          "text/plain"
        ],
        "tags": [
          "CSS"
        ],
        "summary": "Marquage d'un objet comme étant actif.",
        "operationId": "handleActivateObject",
        "parameters": [
          {
            "type": "string",
            "description": "orgID de l'objet à marquer comme étant actif. ",
            "name": "orgID",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Type de l'objet à marquer comme étant actif.",
            "name": "objectType",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "ID de l'objet à marquer comme étant actif.",
            "name": "objectID",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "L'objet a été marqué comme étant actif. ",
            "schema": {
              "type": "string"
            }
          },
          "500": {
            "description": "Echec du marquage de l'objet comme étant actif. ",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/api/v1/objects/{orgID}/{objectType}/{objectID}/consumed": {
      "put": {
        "description": "Permet de marquer l'objet correspondant au type d'objet et à l'ID d'objet spécifié comme ayant été utilisé par l'application.\nLorsque l'objet a été marqué comme ayant été utilisé, il n'est pas redistribué à l'application (même si le service de synchronisation est redémarré).",
        "produces": [
          "text/plain"
        ],
        "tags": [
          "CSS"
        ],
        "summary": "Marquage d'un objet comme ayant été utilisé.",
        "operationId": "handleObjectConsumed",
        "parameters": [
          {
            "type": "string",
            "description": "orgID de l'objet à marquer comme ayant été utilisé.",
            "name": "orgID",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Type de l'objet à marquer comme ayant été utilisé.",
            "name": "objectType",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "ID de l'objet à marquer comme ayant été utilisé.",
            "name": "objectID",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "L'objet a été marqué comme ayant été utilisé.",
            "schema": {
              "type": "string"
            }
          },
          "500": {
            "description": "Echec du marquage de l'objet utilisé. ",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/api/v1/objects/{orgID}/{objectType}/{objectID}/data": {
      "get": {
        "description": "Permet d'obtenir les données de l'objet correspondant au type d'objet et à l'ID d'objet spécifiés.\nLes métadonnées de l'objet indiquent si l'objet contient des données (noData a la valeur false).",
        "produces": [
          "application/octet-stream",
          "text/plain"
        ],
        "tags": [
          "CSS"
        ],
        "summary": "Obtention des données d'un objet.",
        "operationId": "handleObjectGetData",
        "parameters": [
          {
            "type": "string",
            "description": "orgID de l'objet dont les données seront extraites.",
            "name": "orgID",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Type de l'objet dont les données seront extraites.",
            "name": "objectType",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "ID de l'objet dont les données seront extraites.",
            "name": "objectID",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Données de l'objet",
            "schema": {
              "type": "string",
              "format": "binary"
            }
          },
          "500": {
            "description": "Echec de l'extraction des données de l'objet.",
            "schema": {
              "type": "string"
            }
          }
        }
      },
      "put": {
        "description": "Mise à jour des données de l'objet correspondant au type d'objet et à l'ID d'objet spécifié.\nLes données peuvent être mises à jour sans modifier les métadonnées de l'objet.",
        "consumes": [
          "application/octet-stream"
        ],
        "produces": [
          "text/plain"
        ],
        "tags": [
          "CSS"
        ],
        "summary": "Mise à jour des données d'un objet.",
        "operationId": "handleObjectPutData",
        "parameters": [
          {
            "type": "string",
            "description": "orgID de l'objet dont les données seront mises à jour.",
            "name": "orgID",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Type de l'objet dont les données seront mises à jour.",
            "name": "objectType",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "ID de l'objet dont les données seront mises à jour.",
            "name": "objectID",
            "in": "path",
            "required": true
          },
          {
            "description": "Nouvelles données de l'objet. Lorsque vous lisez les octets de données à partir d'un fichier, veuillez définir application/octet-stream sur Content-Type dans l'en-tête.",
            "name": "payload",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string",
              "format": "binary"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Les données de l'objet ont été mises à jour. ",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "L'objet spécifié n'existe pas. ",
            "schema": {
              "type": "string"
            }
          },
          "500": {
            "description": "Echec de la mise à jour des données de l'objet. ",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/api/v1/objects/{orgID}/{objectType}/{objectID}/deleted": {
      "put": {
        "description": "Permet de confirmer la suppression par l'application de l'objet correspondant au type d'objet et à l'ID d'objet spécifiés.\nL'application appelle cette API après avoir terminé les actions associées à la suppression de l'objet.",
        "produces": [
          "text/plain"
        ],
        "tags": [
          "CSS",
          "ESS"
        ],
        "summary": "Confirmation de la suppression de l'objet par le service.",
        "operationId": "handleObjectDeleted",
        "parameters": [
          {
            "type": "string",
            "description": "orgID de l'objet pour lequel confirmer la suppression. Celui-ci est présent uniquement lorsque vous travaillez avec un CSS, et est supprimé du chemin lorsque vous travaillez avec un ESS. ",
            "name": "orgID",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Type de l'objet pour lequel confirmer la suppression.",
            "name": "objectType",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "ID de l'objet pour lequel confirmer la suppression.",
            "name": "objectID",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "La suppression de l'objet a été confirmée.",
            "schema": {
              "type": "string"
            }
          },
          "500": {
            "description": "Echec de la confirmation de la suppression de l'objet. ",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/api/v1/objects/{orgID}/{objectType}/{objectID}/destinations": {
      "get": {
        "description": "Permet d'obtenir la liste des noeuds de service de synchronisation (ESS) qui sont les destinations de l'objet correspondant au type d'objet et à l'ID d'objet spécifiés.\nL'état de distribution de l'objet est fourni pour chaque destination ainsi que son type et son ID.\nIl s'agit d'une API CSS uniquement.",
        "produces": [
          "text/plain"
        ],
        "tags": [
          "CSS"
        ],
        "summary": "Obtention des destinations d'un objet.",
        "operationId": "handleObjectDestinations",
        "parameters": [
          {
            "type": "string",
            "description": "orgID de l'objet dont les destinations seront extraites. Celui-ci est présent uniquement lorsque vous travaillez avec un CSS, et est supprimé du chemin lorsque vous travaillez avec un ESS. ",
            "name": "orgID",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Type de l'objet dont les destinations seront extraites.",
            "name": "objectType",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "ID de l'objet dont les destinations seront extraites. ",
            "name": "objectID",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Destinations des objets et leur statut. ",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/DestinationsStatus"
              }
            }
          },
          "500": {
            "description": "Echec de l'extraction des destinations de l'objet. ",
            "schema": {
              "type": "string"
            }
          }
        }
      },
      "put": {
        "description": "Permet de définir la liste des noeuds du service de synchronisation (ESS) qui seront les destinations de l'objet correspondant au type d'objet et à l'ID d'objet spécifiés.\nIl s'agit d'une API CSS uniquement.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "text/plain"
        ],
        "tags": [
          "CSS"
        ],
        "summary": "Définition des destinations d'un objet.",
        "operationId": "handleObjectDestinationsUpdate",
        "parameters": [
          {
            "type": "string",
            "description": "orgID de l'objet dont les destinations seront mises à jour.",
            "name": "orgID",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Type de l'objet dont les destinations seront mises à jour.",
            "name": "objectType",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "ID de l'objet dont les destinations seront mises à jour.",
            "name": "objectID",
            "in": "path",
            "required": true
          },
          {
            "description": "Liste des destinations de l'objet. ",
            "name": "payload",
            "in": "body",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Les destinations de l'objet ont été mises à jour. ",
            "schema": {
              "type": "string"
            }
          },
          "500": {
            "description": "Echec de la mise à jour des destinations de l'objet.",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/api/v1/objects/{orgID}/{objectType}/{objectID}/policyreceived": {
      "put": {
        "description": "Permet de marquer l'objet correspondant au type d'objet et à l'ID d'objet spécifiés comme ayant reçu sa règle de destination.\nLorsque c'est fait, l'objet n'est plus distribué à l'application qui dresse la liste des objets avec\nune règle de destination à moins d'ajouter \"received=true\" aux paramètres de requête.",
        "produces": [
          "text/plain"
        ],
        "tags": [
          "CSS"
        ],
        "summary": "Marquage de la règle de destination d'un objet comme ayant été reçue.",
        "operationId": "handlePolicyReceived",
        "parameters": [
          {
            "type": "string",
            "description": "orgID de l'objet à marquer comment ayant reçu sa règle de destination.",
            "name": "orgID",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Type de l'objet à marquer comme ayant reçu sa règle de destination.",
            "name": "objectType",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "ID de l'objet à marquer comme ayant reçu sa règle de destination.",
            "name": "objectID",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "L'objet a été marqué comme ayant reçu sa règle de destination.",
            "schema": {
              "type": "string"
            }
          },
          "500": {
            "description": "Echec du marquage de l'objet comme ayant reçu sa règle de destination.",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/api/v1/objects/{orgID}/{objectType}/{objectID}/received": {
      "put": {
        "description": "Permet de marquer l'objet correspondant au type d'objet et à l'ID d'objet comme ayant été reçu par l'application.\nLorsque c'est le cas, l'objet n'est redistribué à l'application qu'à condition d'avoir été spécifié dans la requête des objets.",
        "produces": [
          "text/plain"
        ],
        "tags": [
          "CSS"
        ],
        "summary": "Marquage d'un objet comme ayant été reçu.",
        "operationId": "handleObjectReceived",
        "parameters": [
          {
            "type": "string",
            "description": "orgID de l'objet à marquer comme ayant été reçu.",
            "name": "orgID",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Type de l'objet à marquer comme ayant été reçu. ",
            "name": "objectType",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "ID de l'objet à marquer comme ayant été reçu.",
            "name": "objectID",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "L'objet a été marqué comme ayant été reçu. ",
            "schema": {
              "type": "string"
            }
          },
          "500": {
            "description": "Echec du marquage de l'objet comme ayant été reçu. ",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/api/v1/objects/{orgID}/{objectType}/{objectID}/status": {
      "get": {
        "description": "Permet d'obtenir le statut de l'objet correspondant au type d'objet et à l'ID d'objet spécifiés.\nLe statut accepte les valeurs suivantes :\nnotReady - L'objet n'est pas prêt à être envoyé aux destinations.\nready - L'objet est prêt à être envoyé aux destinations.\nreceived - Les métadonnées de l'objet ont été reçues, mais pas toutes. \ncompletelyReceived - L'objet a été entièrement reçu (métadonnées et données).\nconsumed - L'objet a été utilisé par l'application.\ndeleted - L'objet a été supprimé.",
        "produces": [
          "text/plain"
        ],
        "tags": [
          "CSS"
        ],
        "summary": "Obtention du statut d'un objet.",
        "operationId": "handleObjectStatus",
        "parameters": [
          {
            "type": "string",
            "description": "orgID de l'objet dont le statut sera extrait. ",
            "name": "orgID",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Type de l'objet dont le statut sera extrait.",
            "name": "objectType",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "ID de l'objet dont le statut sera extrait. ",
            "name": "objectID",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Statut de l'objet",
            "schema": {
              "type": "string",
              "enum": [
                "notReady",
                "ready",
                "received",
                "completelyReceived",
                "consumed",
                "deleted"
              ]
            }
          },
          "500": {
            "description": "Echec de l'extraction du statut de l'objet. ",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/api/v1/objects/{orgID}/{objectType}?all_objects=true": {
      "get": {
        "description": "Permet d'obtenir tous les objets correspondant au type d'objet spécifié et ayant une règle de destination.",
        "produces": [
          "application/json",
          "text/plain"
        ],
        "tags": [
          "ESS"
        ],
        "summary": "Obtention des objets qui possèdent une règle de destination correspondant au type spécifié.",
        "operationId": "handleListAllObjects",
        "parameters": [
          {
            "type": "string",
            "description": "Type d'objet des objets à renvoyer. ",
            "name": "objectType",
            "in": "path",
            "required": true
          },
          {
            "type": "boolean",
            "description": "Permet d'inclure ou non tous les objets. Si la valeur est false, seuls les objets mis à jour sont renvoyés.",
            "name": "all_objects",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Objets associés à une réponse de règle de destination. ",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ObjectDestinationPolicy"
              }
            }
          },
          "404": {
            "description": "Aucun objet associé à une règle de destination n'a été trouvé. ",
            "schema": {
              "type": "string"
            }
          },
          "500": {
            "description": "Echec de l'extraction des objets mis à jour.",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/api/v1/objects/{orgID}?destination_policy=true": {
      "get": {
        "description": "Permet d'obtenir la liste des objets qui possèdent des règles de destination.\nEn règle générale, une application appelle régulièrement cette API pour vérifier la présence de mises à jour.",
        "produces": [
          "application/json",
          "text/plain"
        ],
        "tags": [
          "CSS"
        ],
        "summary": "Obtention des objets associés à des règles de destination.",
        "operationId": "handleListObjectsWithDestinationPolicy",
        "parameters": [
          {
            "type": "string",
            "description": "orgID des objets mis à jour à renvoyer.",
            "name": "orgID",
            "in": "path",
            "required": true
          },
          {
            "type": "boolean",
            "description": "La valeur doit être true pour indiquer que les objets associés à une règle de destination doivent être extraits.",
            "name": "destination_policy",
            "in": "query",
            "required": true
          },
          {
            "type": "boolean",
            "description": "Indique si les objets ayant été marqués comme reçus par l'application doivent être inclus ou non.",
            "name": "received",
            "in": "query"
          },
          {
            "type": "string",
            "description": "ID du service (orgID/serviceName) avec lequel les objets ont une affinité et dont la règle de destination doit être extraite.",
            "name": "service",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int64",
            "description": "Objets qui possèdent une règle de destination ayant été mise à jour depuis la récupération du temps universel coordonné (UTC) exprimé en nanosecondes.",
            "name": "since",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Réponse de la règle de destination de l'objet. ",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ObjectDestinationPolicy"
              }
            }
          },
          "404": {
            "description": "Aucun objet mis à jour n'a été trouvé. ",
            "schema": {
              "type": "string"
            }
          },
          "500": {
            "description": "Echec de l'extraction des objets mis à jour.",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/api/v1/objects/{orgID}?filters=true": {
      "get": {
        "description": "Permet d'obtenir la liste des objets qui satisfont aux filtres donnés\nIl s'agit d'une API CSS uniquement.",
        "produces": [
          "application/json",
          "text/plain"
        ],
        "tags": [
          "CSS"
        ],
        "summary": "Obtention des objets qui satisfont aux filtres donnés",
        "operationId": "handleListObjectsWithFilters",
        "parameters": [
          {
            "type": "string",
            "description": "orgID des objets mis à jour renvoyés. Celui-ci est présent uniquement lorsque vous travaillez avec un CSS, et est supprimé du chemin lorsque vous travaillez avec un ESS. ",
            "name": "orgID",
            "in": "path",
            "required": true
          },
          {
            "type": "boolean",
            "description": "La valeur doit être true pour indiquer que les objets associés à des filtres doivent être extraits.",
            "name": "filters",
            "in": "query",
            "required": true
          },
          {
            "type": "boolean",
            "description": "La valeur doit être true pour indiquer que les objets associés à une règle de destination doivent être extraits.",
            "name": "destinationPolicy",
            "in": "query"
          },
          {
            "type": "string",
            "description": "ID du service (orgID/serviceName) avec lequel les objets ont une affinité et dont la règle de destination doit être extraite.",
            "name": "dpService",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Nom de la propriété définie dans la règle de destination avec laquelle les objets ont une affinité et dont la règle de destination doit être extraite.",
            "name": "dpPropertyName",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Objets qui possèdent une règle de destination ayant été mise à jour depuis la récupération de l'horodatage spécifié dans RFC3339.",
            "name": "since",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Permet de récupérer les objets associés au type d'objet donné. ",
            "name": "objectType",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Permet de récupérer les objets associés à l'ID d'objet donné. ",
            "name": "objectID",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Permet de récupérer les objets associés au type de destination donné. ",
            "name": "destinationType",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Permet de récupérer les objets associés à l'ID de destination donné. ",
            "name": "destinationID",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "Permet de récupérer les objets dont la valeur noData est définie sur true.",
            "name": "noData",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Permet de récupérer les objets dont la date d'expiration est antérieure à l'horodatage spécifié au format RFC3339.",
            "name": "expirationTimeBefore",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Réponse des objets",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/MetaData"
              }
            }
          },
          "404": {
            "description": "Aucun objet n'a été trouvé",
            "schema": {
              "type": "string"
            }
          },
          "500": {
            "description": "Echec de l'extraction des objets",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/api/v1/objects?destination_policy=true": {
      "get": {
        "description": "Permet d'obtenir la liste des objets qui possèdent des règles de destination.\nEn règle générale, une application appelle régulièrement cette API pour vérifier la présence de mises à jour.",
        "produces": [
          "application/json",
          "text/plain"
        ],
        "tags": [
          "ESS"
        ],
        "summary": "Obtention des objets associés à des règles de destination.",
        "operationId": "handleListObjectsWithDestinationPolicy",
        "parameters": [
          {
            "type": "boolean",
            "description": "La valeur doit être true pour indiquer que les objets associés à une règle de destination doivent être extraits.",
            "name": "destination_policy",
            "in": "query",
            "required": true
          },
          {
            "type": "boolean",
            "description": "Indique si les objets ayant été marqués comme reçus par l'application doivent être inclus ou non.",
            "name": "received",
            "in": "query"
          },
          {
            "type": "string",
            "description": "ID du service (orgID/serviceName) avec lequel les objets ont une affinité et dont la règle de destination doit être extraite.",
            "name": "service",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int64",
            "description": "Objets qui possèdent une règle de destination ayant été mise à jour depuis la récupération du temps universel coordonné (UTC) exprimé en nanosecondes.",
            "name": "since",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Réponse de la règle de destination de l'objet. ",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ObjectDestinationPolicy"
              }
            }
          },
          "404": {
            "description": "Aucun objet mis à jour n'a été trouvé. ",
            "schema": {
              "type": "string"
            }
          },
          "500": {
            "description": "Echec de l'extraction des objets mis à jour.",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/api/v1/organizations": {
      "get": {
        "description": "Permet d'obtenir la liste des organisations existantes. S'applique uniquement à CSS.",
        "produces": [
          "application/json",
          "text/plain"
        ],
        "tags": [
          "CSS"
        ],
        "summary": "Obtention des organisations.",
        "operationId": "handleGetOrganizations",
        "responses": {
          "200": {
            "description": "Réponse des organisations",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/organization"
              }
            }
          },
          "404": {
            "description": "Aucune organisation n'a été trouvée.",
            "schema": {
              "type": "string"
            }
          },
          "500": {
            "description": "Echec de l'extraction des organisations. ",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/api/v1/organizations/{orgID}": {
      "put": {
        "description": "Permet de stocker les informations sur l'organisation. S'applique uniquement à CSS.",
        "produces": [
          "text/plain"
        ],
        "tags": [
          "CSS"
        ],
        "summary": "Mise à jour de l'organisation.",
        "operationId": "handleOrganizations",
        "parameters": [
          {
            "type": "string",
            "description": "orgID de l'organisation à mettre à jour.",
            "name": "orgID",
            "in": "path",
            "required": true
          },
          {
            "name": "payload",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Organization"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "L'organisation a été correctement mise à jour.",
            "schema": {
              "type": "string"
            }
          },
          "500": {
            "description": "Echec de la mise à jour de l'organisation. ",
            "schema": {
              "type": "string"
            }
          }
        }
      },
      "delete": {
        "description": "Permet de supprimer les informations relatives à l'organisation et de nettoyer toutes les ressources (objets, destinations, etc.) associées\nà l'organisation supprimée. S'applique uniquement à CSS.",
        "produces": [
          "text/plain"
        ],
        "tags": [
          "CSS"
        ],
        "summary": "Suppression de l'organisation.",
        "operationId": "handleDeleteOrganization",
        "parameters": [
          {
            "type": "string",
            "description": "orgID de l'organisation à supprimer.",
            "name": "orgID",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "L'organisation a été correctement supprimée.",
            "schema": {
              "type": "string"
            }
          },
          "500": {
            "description": "Echec de la suppression de l'organisation. ",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/api/v1/resend": {
      "post": {
        "description": "Utilisée par un ESS pour demander au CSS de lui renvoyer tous les objets (compatible uniquement avec les demandes ESS vers CSS).\nUne application n'a besoin de cette API que si les données qu'elle a obtenues précédemment de l'ESS ont été perdues.",
        "produces": [
          "text/plain"
        ],
        "tags": [
          "ESS"
        ],
        "summary": "Demande de renvoi des objets.",
        "operationId": "handleResend",
        "responses": {
          "204": {
            "description": "La demande sera envoyée.",
            "schema": {
              "type": "string"
            }
          },
          "400": {
            "description": "La demande n'est pas autorisée sur un service de synchronisation Cloud. ",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/api/v1/security/{type}/{orgID}": {
      "get": {
        "produces": [
          "text/plain"
        ],
        "tags": [
          "CSS"
        ],
        "summary": "Permet d'extraire les ACL de destination ou d'objet d'une organisation.",
        "operationId": "handleACLGetAll",
        "parameters": [
          {
            "enum": [
              "destinations",
              "objects"
            ],
            "type": "string",
            "description": "Type d'ACL dont la liste des noms d'utilisateur doit être extraite.",
            "name": "type",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "orgID pour lequel existe l'ACL associée au type de destination ou au type d'objet.",
            "name": "orgID",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Liste des ACL correspondant au type spécifié qui ont été extraites. ",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "404": {
            "description": "Aucune ACL n'a été trouvée.",
            "schema": {
              "type": "string"
            }
          },
          "500": {
            "description": "Echec de récupération des ACL du type spécifié ayant été extraites.",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/api/v1/security/{type}/{orgID}/{key}": {
      "get": {
        "produces": [
          "text/plain"
        ],
        "tags": [
          "CSS"
        ],
        "summary": "Récupération de la liste des noms d'utilisateurs depuis l'ACL associée à un type de destination ou à un type d'objet. ",
        "operationId": "handleACLGet",
        "parameters": [
          {
            "enum": [
              "destinations",
              "objects"
            ],
            "type": "string",
            "description": "Type d'ACL dont la liste des noms d'utilisateur doit être extraite.",
            "name": "type",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "orgID pour lequel existe l'ACL associée au type de destination ou au type d'objet.",
            "name": "orgID",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Type de destination ou type d'objet protégé par l'ACL.",
            "name": "key",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "La liste des noms d'utilisateurs a été extraite de l'ACL spécifiée.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "404": {
            "description": "L'ACL n'a pas été trouvée.",
            "schema": {
              "type": "string"
            }
          },
          "500": {
            "description": "Echec de récupération des noms d'utilisateurs depuis l'ACL spécifiée.",
            "schema": {
              "type": "string"
            }
          }
        }
      },
      "put": {
        "description": "Permet d'ajouter/de supprimer en bloc des noms d'utilisateurs dans une ACL associée à un type de destination ou à un type d'objet. Si un\npremier nom d'utilisateur est ajouté, l'ACL est créée. Si le dernier nom d'utilisateur est supprimé, l'ACL\nest supprimée.",
        "produces": [
          "text/plain"
        ],
        "tags": [
          "CSS"
        ],
        "summary": "Permet d'ajouter/de supprimer en bloc des noms d'utilisateurs dans une ACL associée à un type de destination ou à un type d'objet. ",
        "operationId": "handleBulkACLUpdate",
        "parameters": [
          {
            "enum": [
              "destinations",
              "objects"
            ],
            "type": "string",
            "description": "Type d'ACL dans laquelle les noms d'utilisateurs spécifiés seront ajoutés/supprimés.",
            "name": "type",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "orgID pour lequel existe l'ACL associée au type de destination ou au type d'objet.",
            "name": "orgID",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Type de destination ou type d'objet protégé par l'ACL.",
            "name": "key",
            "in": "path",
            "required": true
          },
          {
            "name": "payload",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/bulkACLUpdate"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Les noms d'utilisateurs ont été ajoutés/supprimés dans l'ACL spécifiée. ",
            "schema": {
              "type": "string"
            }
          },
          "500": {
            "description": "Echec de l'ajout/la suppression des noms d'utilisateurs dans l'ACL spécifiée.",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/api/v1/security/{type}/{orgID}/{key}/{username}": {
      "put": {
        "description": "Permet d'ajouter un nom d'utilisateur à une ACL associée à un type de destination ou à un type d'objet. Si un premier nom d'utilisateur est ajouté,\nl'ACL est créée.",
        "produces": [
          "text/plain"
        ],
        "tags": [
          "CSS"
        ],
        "summary": "Permet d'ajouter un nom d'utilisateur à une ACL associée à un type de destination ou à un type d'objet. ",
        "operationId": "handleACLUpdate",
        "parameters": [
          {
            "enum": [
              "destinations",
              "objects"
            ],
            "type": "string",
            "description": "Type d'ACL à laquelle le nom d'utilisateur spécifié sera ajouté.",
            "name": "type",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "orgID pour lequel existe l'ACL associée au type de destination ou au type d'objet.",
            "name": "orgID",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Type de destination ou type d'objet protégé par l'ACL.",
            "name": "key",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Nom d'utilisateur à ajouter à l'ACL spécifiée.",
            "name": "username",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "Le nom d'utilisateur a été ajouté à l'ACL spécifiée.",
            "schema": {
              "type": "string"
            }
          },
          "500": {
            "description": "Echec de l'ajout du nom d'utilisateur à l'ACL spécifiée.",
            "schema": {
              "type": "string"
            }
          }
        }
      },
      "delete": {
        "description": "Permet de supprimer un nom d'utilisateur de l'ACL associée à un type de destination ou à un type d'objet. Si le dernier nom d'utilisateur est supprimé,\nl'ACL l'est également.",
        "produces": [
          "text/plain"
        ],
        "tags": [
          "CSS"
        ],
        "summary": "Permet de supprimer un nom d'utilisateur de l'ACL associée à un type de destination ou à un type d'objet. ",
        "operationId": "handleACLDelete",
        "parameters": [
          {
            "enum": [
              "destinations",
              "objects"
            ],
            "type": "string",
            "description": "Type d'ACL à partir de laquelle supprimer le nom d'utilisateur spécifié.",
            "name": "type",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "orgID pour lequel existe l'ACL associée au type de destination ou au type d'objet.",
            "name": "orgID",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Type de destination ou type d'objet protégé par l'ACL.",
            "name": "key",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Nom d'utilisateur à supprimer de l'ACL spécifiée.",
            "name": "username",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "Le nom d'utilisateur a été supprimé de l'ACL spécifiée.",
            "schema": {
              "type": "string"
            }
          },
          "500": {
            "description": "Echec de la suppression du nom d'utilisateur de l'ACL spécifiée.",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "ConsumedObject": {
      "description": "ConsumedObject contient les métadonnées de l'objet utilisé ainsi que son horodatage.",
      "type": "object",
      "properties": {
        "MetaData": {
          "$ref": "#/definitions/MetaData"
        },
        "Timestamp": {
          "type": "string",
          "format": "date-time"
        }
      },
      "x-go-package": "github.com/open-horizon/edge-sync-service/common"
    },
    "DBHealthStatusInfo": {
      "description": "DBHealthStatusInfo décrit l'état de santé de la base de données du noeud de service de synchronisation. ",
      "type": "object",
      "properties": {
        "dbReadFailures": {
          "type": "integer",
          "format": "uint32",
          "x-go-name": "DBReadFailures"
        },
        "dbStatus": {
          "type": "string",
          "x-go-name": "DBStatus"
        },
        "dbWriteFailures": {
          "type": "integer",
          "format": "uint32",
          "x-go-name": "DBWriteFailures"
        },
        "disconnectedFromDB": {
          "type": "boolean",
          "x-go-name": "DisconnectedFromDB"
        },
        "lastDisconnectFromDBDuration": {
          "type": "integer",
          "format": "uint64",
          "x-go-name": "LastDisconnectFromDBDuration"
        },
        "timeSinceLastReadWriteError": {
          "type": "integer",
          "format": "uint64",
          "x-go-name": "TimeSinceLastReadWriteError"
        }
      },
      "x-go-package": "github.com/open-horizon/edge-sync-service/common"
    },
    "Destination": {
      "description": "Chaque noeud de périphérie de service de synchronisation (ESS) possède une adresse composée de l'ID, du type et de l'organisation du noeud.\nUn noeud ESS communique avec le composant CSS via MQTT ou HTTP.",
      "type": "object",
      "title": "La destination décrit un noeud de service de synchronisation.",
      "required": [
        "destinationType",
        "destinationID",
        "communication",
        "codeVersion"
      ],
      "properties": {
        "codeVersion": {
          "description": "CodeVersion désigne la version de code du service de synchronisation utilisée par la destination.",
          "type": "string",
          "x-go-name": "CodeVersion"
        },
        "communication": {
          "description": "Communication désigne le protocole de communication utilisé par la destination pour se connecter (MQTT ou HTTP)",
          "type": "string",
          "enum": [
            "HTTP",
            "MQTT"
          ],
          "x-go-name": "Communication"
        },
        "destinationID": {
          "description": "DestID désigne l'ID de destination",
          "type": "string",
          "x-go-name": "DestID"
        },
        "destinationOrgID": {
          "description": "DestOrgID désigne l'ID de l'organisation de destination\nChaque objet de service de synchronisation appartient à une seule organisation",
          "type": "string",
          "x-go-name": "DestOrgID"
        },
        "destinationType": {
          "description": "DestType désigne le type de destination",
          "type": "string",
          "x-go-name": "DestType"
        }
      },
      "x-go-package": "github.com/open-horizon/edge-sync-service/common"
    },
    "DestinationsStatus": {
      "description": "DestinationsStatus indique l'état de distribution d'un objet vers une destination\nDestinationsStatus fournit des informations sur l'état de distribution d'un objet vers une certaine destination.\nL'état peut avoir l'une des valeurs suivantes :\nIndication précisant si l'objet a été distribué à la destination\npending - indique que l'objet est en attente de distribution à la destination\ndelivering - indique que l'objet est en cours de distribution à la destination\ndelivered - indique que l'objet a été distribué à la destination\nconsumed - indique que l'objet a été utilisé par la destination\ndeleted - indique que la destination a confirmé la suppression de l'objet\nerror - indique qu'un message d'erreur a été reçu de la destination",
      "type": "object",
      "required": [
        "destinationType",
        "destinationID",
        "status"
      ],
      "properties": {
        "destinationID": {
          "description": "DestID désigne l'ID de destination",
          "type": "string",
          "x-go-name": "DestID"
        },
        "destinationType": {
          "description": "DestType désigne le type de destination",
          "type": "string",
          "x-go-name": "DestType"
        },
        "message": {
          "description": "Message désigne le message pour la destination",
          "type": "string",
          "x-go-name": "Message"
        },
        "status": {
          "description": "Status désigne le statut de la destination",
          "type": "string",
          "enum": [
            "pending",
            "delivering",
            "delivered",
            "consumed",
            "deleted",
            "error"
          ],
          "x-go-name": "Status"
        }
      },
      "x-go-package": "github.com/open-horizon/edge-sync-service/common"
    },
    "HealthStatusInfo": {
      "description": "HealthStatusInfo décrit l'état de santé du noeud sync-service",
      "type": "object",
      "properties": {
        "healthStatus": {
          "type": "string",
          "x-go-name": "HealthStatus"
        },
        "nodeType": {
          "type": "string",
          "x-go-name": "NodeType"
        },
        "upTime": {
          "type": "integer",
          "format": "uint64",
          "x-go-name": "UpTime"
        }
      },
      "x-go-package": "github.com/open-horizon/edge-sync-service/common"
    },
    "IOError": {
      "description": "IOError est l'erreur relative à l'échec des demandes à cause des E-S",
      "type": "object",
      "properties": {
        "Message": {
          "type": "string"
        }
      },
      "x-go-package": "github.com/open-horizon/edge-sync-service/common"
    },
    "InternalError": {
      "description": "InternalError indique une erreur générale",
      "type": "object",
      "properties": {
        "Message": {
          "type": "string"
        }
      },
      "x-go-package": "github.com/open-horizon/edge-sync-service/common"
    },
    "Locks": {
      "description": "Locks représente un ensemble de verrous d'objet",
      "type": "object",
      "x-go-package": "github.com/open-horizon/edge-sync-service/common"
    },
    "MQTTHealthStatusInfo": {
      "description": "MQTTHealthStatusInfo décrit l'état de santé de la connexion MQTT du noeud de synchronisation de service ",
      "type": "object",
      "properties": {
        "disconnectedFromMQTTBroker": {
          "type": "boolean",
          "x-go-name": "DisconnectedFromMQTTBroker"
        },
        "lastDisconnectFromBrokerDuration": {
          "type": "integer",
          "format": "uint64",
          "x-go-name": "LastDisconnectFromBrokerDuration"
        },
        "mqttConnectionStatus": {
          "type": "string",
          "x-go-name": "MQTTConnectionStatus"
        },
        "publishFailures": {
          "type": "integer",
          "format": "uint32",
          "x-go-name": "PublishFailures"
        },
        "subscribeFailures": {
          "type": "integer",
          "format": "uint32",
          "x-go-name": "SubscribeFailures"
        },
        "timeSinceLastPublishError": {
          "type": "integer",
          "format": "uint64",
          "x-go-name": "TimeSinceLastPublishError"
        },
        "timeSinceLastSubscribeError": {
          "type": "integer",
          "format": "uint64",
          "x-go-name": "TimeSinceLastSubscribeError"
        }
      },
      "x-go-package": "github.com/open-horizon/edge-sync-service/common"
    },
    "MessagingGroup": {
      "description": "MessagingGroup mappe l'organisation sur son groupe de messagerie",
      "type": "object",
      "properties": {
        "GroupName": {
          "type": "string"
        },
        "OrgID": {
          "type": "string"
        }
      },
      "x-go-package": "github.com/open-horizon/edge-sync-service/common"
    },
    "MetaData": {
      "description": "Chaque objet comporte des métadonnées (obligatoire) et des données (facultatif). Les métadonnées et les données peuvent être mises à jour de manière indépendante.\nChaque noeud de service de synchronisation (ESS) possède une adresse composée de l'ID, du type et de l'organisation du noeud.\nPour envoyer un objet à un seul noeud, définissez les zones destinationType et destinationID sur les mêmes valeurs que le type et l'ID du noeud.\nPour envoyer un objet à tous les noeuds d'un certain type, définissez la zone destinationType sur le type approprié et laissez la zone destinationID vide.\nSi les zones destinationType et destinationID sont toutes les deux vides, l'objet est envoyé à tous les noeuds.",
      "type": "object",
      "title": "MetaData désigne les métadonnées qui identifient et définissent l'objet de service de synchronisation.",
      "required": [
        "objectID",
        "objectType"
      ],
      "properties": {
        "activationTime": {
          "description": "ActivationTime indique l'horodatage/la date correspondant au moment où l'objet devrait être automatiquement activé.\nL'horodatage doit respecter le format RFC3339.\nCette zone est facultative et l'objet n'est jamais automatiquement activé si elle est omise (Inactive a la valeur true).",
          "type": "string",
          "x-go-name": "ActivationTime"
        },
        "autodelete": {
          "description": "AutoDelete indique si l'objet doit être supprimé après avoir été distribué à l'ensemble de ses destinations à partir de DestinationsList.\nCette zone est facultative et sa valeur par défaut est false (pas de suppression).\nElle est utilisée uniquement lorsque vous faites appel à CSS.Les objets sont toujours supprimés après avoir été distribués sur ESS.",
          "type": "boolean",
          "x-go-name": "AutoDelete"
        },
        "chunkSize": {
          "description": "ChunkSize est une zone interne qui indique la taille de la charge maximale du message.\nCette zone n'a pas vocation à être définie par les utilisateurs.",
          "type": "integer",
          "format": "int64",
          "x-go-name": "ChunkSize"
        },
        "consumers": {
          "description": "ExpectedConsumers désigne le nombre d'applications attendues afin d'indiquer qu'elles ont utilisé l'objet.\nCette zone est facultative et sa valeur par défaut est 1.",
          "type": "integer",
          "format": "int64",
          "x-go-name": "ExpectedConsumers"
        },
        "dataID": {
          "description": "DataID est un ID de données interne.\nCette zone n'a pas vocation à être définie par les utilisateurs.",
          "type": "integer",
          "format": "int64",
          "x-go-name": "DataID"
        },
        "deleted": {
          "description": "Deleted indique aux applications qui recherchent des mises à jour que cet objet a été supprimé.\nCette zone en lecture seule n'a pas vocation à être définie par les utilisateurs.",
          "type": "boolean",
          "x-go-name": "Deleted"
        },
        "description": {
          "description": "Description désigne la description textuelle de l'objet.\nCette zone est facultative et sa valeur par défaut est vide.",
          "type": "string",
          "x-go-name": "Description"
        },
        "destinationDataUri": {
          "description": "DestinationDataURI est un URI qui indique l'emplacement de stockage de l'objet.\nSeuls les URI de fichier sont actuellement pris en charge.\nCette zone est disponible uniquement lorsque vous utilisez CSS.\nElle est facultative et l'objet est stocké dans le stockage interne du noeud si elle n'est pas renseignée.",
          "type": "string",
          "x-go-name": "DestinationDataURI"
        },
        "destinationID": {
          "description": "DestID désigne l'ID de la destination. Si la zone n'est pas renseignée, l'objet est envoyé à tous les composants ESS ayant la même valeur DestType.\nCette zone est ignorée lorsque vous utilisez le composant ESS (la destination est le composant CSS).",
          "type": "string",
          "x-go-name": "DestID"
        },
        "destinationOrgID": {
          "description": "DestOrgID représente l'ID d'organisation de l'objet (un objet appartient à une seule organisation).\nCette zone est ignorée lorsque vous utilisez le composant ESS (l'orgID du composant ESS est utilisé).",
          "type": "string",
          "x-go-name": "DestOrgID"
        },
        "destinationPolicy": {
          "$ref": "#/definitions/Policy"
        },
        "destinationType": {
          "description": "DestType est le type de destination auquel envoyer l'objet.\nS'il est omis (de même que DestinationsList), l'objet est diffusé à toutes les destinations connues.\nCette zone est ignorée lorsque vous utilisez le composant ESS (la destination est toujours le composant CSS).",
          "type": "string",
          "x-go-name": "DestType"
        },
        "destinationsList": {
          "description": "DestinationsList est la liste des destinations sous forme de paires type:id auxquelles envoyer l'objet.\nLorsqu'une valeur DestinationsList est fournie, DestType et DestID doivent être ignorées.\nCette zone est ignorée lorsque vous utilisez le composant ESS (la destination est toujours le composant CSS).",
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-go-name": "DestinationsList"
        },
        "expiration": {
          "description": "Expiration désigne l'horodatage/la date correspondant à la date d'expiration de l'objet.\nLorsque l'objet expire, il est automatiquement supprimé.\nL'horodatage doit respecter le format RFC3339.\nCette zone est disponible uniquement lorsque vous utilisez CSS.\nZone facultative mais l'objet n'expire pas si elle n'est pas renseignée.",
          "type": "string",
          "x-go-name": "Expiration"
        },
        "inactive": {
          "description": "Inactive indique que l'objet est actuellement inactif.\nUn objet peut être créé comme inactif, ce qui signifie qu'il n'est pas distribué à ses destinations. L'objet peut être activé ultérieurement.\nCette zone est facultative et sa valeur par défaut est false (objet actif).",
          "type": "boolean",
          "x-go-name": "Inactive"
        },
        "instanceID": {
          "description": "InstanceID désigne un ID d'instance interne.\nCette zone n'a pas vocation à être définie par les utilisateurs.",
          "type": "integer",
          "format": "int64",
          "x-go-name": "InstanceID"
        },
        "link": {
          "description": "Link désigne un lien à partir duquel les données de l'objet peuvent être récupérées.\nLe lien est défini et utilisé par l'application. Le service de synchronisation n'a pas accès au lien. \nCette zone est facultative et les données doivent être fournies par l'application si elle n'est pas renseignée.",
          "type": "string",
          "x-go-name": "Link"
        },
        "metaOnly": {
          "description": "MetaOnly est un indicateur qui précise que la mise à jour concerne uniquement les métadonnées. Les données de l'objet en cours restent inchangées. \nCette zone est facultative et sa valeur par défaut est false (les données et les métadonnées sont mises à jour).",
          "type": "boolean",
          "x-go-name": "MetaOnly"
        },
        "noData": {
          "description": "NoData indique que l'objet n'est associé à aucune donnée.\nLes objets sans données peuvent être utilisés, par exemple, pour envoyer des notifications.\nCette zone est facultative et sa valeur par défaut est false (l'objet contient des données).",
          "type": "boolean",
          "x-go-name": "NoData"
        },
        "objectID": {
          "description": "ObjectID est un identificateur unique de l'objet",
          "type": "string",
          "x-go-name": "ObjectID"
        },
        "objectSize": {
          "description": "ObjectSize est une zone interne qui indique la taille des données de l'objet.\nCette zone n'a pas vocation à être définie par les utilisateurs.",
          "type": "integer",
          "format": "int64",
          "x-go-name": "ObjectSize"
        },
        "objectType": {
          "description": "ObjectType représente le type de l'objet. \nLe type est utilisé pour regrouper plusieurs objets, par exemple lors de la recherche de mises à jour pour l'objet.",
          "type": "string",
          "x-go-name": "ObjectType"
        },
        "originID": {
          "description": "OriginID est l'ID d'origine de l'objet. Il est défini par un code interne.\nCette zone en lecture seule n'a pas vocation à être définie par les utilisateurs.",
          "type": "string",
          "x-go-name": "OriginID"
        },
        "originType": {
          "description": "OriginType est le type d'origine de l'objet. Il est défini par un code interne.\nCette zone en lecture seule n'a pas vocation à être définie par les utilisateurs.",
          "type": "string",
          "x-go-name": "OriginType"
        },
        "ownerID": {
          "description": "OwnerID est une zone interne qui indique l'auteur de l'objet\nCette zone n'a pas vocation à être définie par les utilisateurs",
          "type": "string",
          "x-go-name": "OwnerID"
        },
        "sourceDataUri": {
          "description": "SourceDataURI est un URI qui indique l'emplacement à partir duquel l'émetteur de l'objet doit lire les données.\nSeuls les URI de fichier sont actuellement pris en charge.\nCette zone est disponible uniquement lorsque vous utilisez ESS.\nElle est facultative et les données de l'objet doivent être fournies par l'utilisateur si elle n'est pas renseignée.",
          "type": "string",
          "x-go-name": "SourceDataURI"
        },
        "version": {
          "description": "Version est la version de l'objet (telle qu'utilisée par l'application).\nCette zone est facultative et sa valeur par défaut est vide.",
          "type": "string",
          "x-go-name": "Version"
        }
      },
      "x-go-package": "github.com/open-horizon/edge-sync-service/common"
    },
    "NotFound": {
      "description": "NotFound est l'erreur renvoyée lorsqu'un objet est introuvable",
      "type": "object",
      "x-go-package": "github.com/open-horizon/edge-sync-service/common"
    },
    "NotificationInfo": {
      "description": "NotificationInfo contient des informations sur un message à envoyer de l'autre côté ",
      "type": "object",
      "properties": {
        "DataID": {
          "type": "integer",
          "format": "int64"
        },
        "DestID": {
          "type": "string"
        },
        "DestType": {
          "type": "string"
        },
        "InstanceID": {
          "type": "integer",
          "format": "int64"
        },
        "MetaData": {
          "$ref": "#/definitions/MetaData"
        },
        "NotificationTopic": {
          "type": "string"
        }
      },
      "x-go-package": "github.com/open-horizon/edge-sync-service/common"
    },
    "ObjectDestinationPolicy": {
      "type": "object",
      "title": "ObjectDestinationPolicy contient des informations sur un objet associé à une règle de destination.",
      "required": [
        "orgID",
        "objectType",
        "objectID"
      ],
      "properties": {
        "destinationPolicy": {
          "$ref": "#/definitions/Policy"
        },
        "destinations": {
          "description": "Destinations est la liste des destinations actuelles de l'objet ",
          "type": "array",
          "items": {
            "$ref": "#/definitions/DestinationsStatus"
          },
          "x-go-name": "Destinations"
        },
        "objectID": {
          "description": "ObjectID est un identificateur unique de l'objet",
          "type": "string",
          "x-go-name": "ObjectID"
        },
        "objectType": {
          "description": "ObjectType représente le type de l'objet. \nLe type est utilisé pour regrouper plusieurs objets, par exemple lors de la recherche de mises à jour pour l'objet.",
          "type": "string",
          "x-go-name": "ObjectType"
        },
        "orgID": {
          "description": "OrgID représente l'ID d'organisation de l'objet (un objet appartient à une seule organisation).",
          "type": "string",
          "x-go-name": "OrgID"
        }
      },
      "x-go-package": "github.com/open-horizon/edge-sync-service/common"
    },
    "ObjectStatus": {
      "description": "ObjectStatus décrit l'état de distribution d'un objet pour une destination\nL'état peut avoir l'une des valeurs suivantes :\nIndication précisant si l'objet a été distribué à la destination\ndelivering - indique que l'objet est en cours de distribution\ndelivered - indique que l'objet a été distribué\nconsumed - indique que l'objet a été utilisé\ndeleted - indique que la destination a confirmé la suppression de l'objet\nerror - indique qu'un message d'erreur en retour a été reçu",
      "type": "object",
      "required": [
        "objectType",
        "objectID",
        "status"
      ],
      "properties": {
        "objectID": {
          "description": "ObjectID désigne l'ID d'objet",
          "type": "string",
          "x-go-name": "ObjectID"
        },
        "objectType": {
          "description": "ObjectType désigne le type d'objet",
          "type": "string",
          "x-go-name": "ObjectType"
        },
        "orgID": {
          "description": "OrgID désigne l'ID d'organisation de l'organisation",
          "type": "string",
          "x-go-name": "OrgID"
        },
        "status": {
          "description": "Status indique l'état de l'objet pour la destination",
          "type": "string",
          "enum": [
            "delivering",
            "delivered",
            "consumed",
            "deleted",
            "error"
          ],
          "x-go-name": "Status"
        }
      },
      "x-go-package": "github.com/open-horizon/edge-sync-service/common"
    },
    "Organization": {
      "description": "Organization comporte des informations sur l'organisation",
      "type": "object",
      "properties": {
        "address": {
          "description": "Address désigne l'adresse du courtier à utiliser pour se connecter à cette organisation",
          "type": "string",
          "x-go-name": "Address"
        },
        "orgID": {
          "description": "OrgID désigne l'ID d'organisation de l'organisation",
          "type": "string",
          "x-go-name": "OrgID"
        },
        "password": {
          "description": "Password désigne le mot de passe à utiliser pour se connecter à cette organisation",
          "type": "string",
          "x-go-name": "Password"
        },
        "user": {
          "description": "User désigne le nom d'utilisateur à utiliser pour se connecter à cette organisation",
          "type": "string",
          "x-go-name": "User"
        }
      },
      "x-go-package": "github.com/open-horizon/edge-sync-service/common"
    },
    "PathError": {
      "description": "PathError désigne l'erreur relative aux problèmes de chemins",
      "type": "object",
      "properties": {
        "Message": {
          "type": "string"
        }
      },
      "x-go-package": "github.com/open-horizon/edge-sync-service/common"
    },
    "Policy": {
      "description": "Policy décrit une règle composée d'un ensemble de propriétés et de contraintes",
      "type": "object",
      "properties": {
        "constraints": {
          "description": "Constraints est un ensemble d'expressions qui forment les contraintes de la règle",
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-go-name": "Constraints"
        },
        "properties": {
          "description": "Properties désigne l'ensemble des propriétés d'une règle particulière ",
          "type": "array",
          "items": {
            "$ref": "#/definitions/PolicyProperty"
          },
          "x-go-name": "Properties"
        },
        "services": {
          "description": "Services représente la liste des services pour lesquels l'objet a une affinité",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ServiceID"
          },
          "x-go-name": "Services"
        },
        "timestamp": {
          "description": "Timestamp indique quand la règle a été mise à jour pour la dernière fois (résultat de time.Now().UTC().UnixNano())",
          "type": "integer",
          "format": "int64",
          "x-go-name": "Timestamp"
        }
      },
      "x-go-package": "github.com/open-horizon/edge-sync-service/common"
    },
    "PolicyProperty": {
      "description": "PolicyProperty est une propriété d'une règle",
      "type": "object",
      "required": [
        "name",
        "value"
      ],
      "properties": {
        "name": {
          "description": "Name désigne le nom de la propriété",
          "type": "string",
          "x-go-name": "Name"
        },
        "type": {
          "description": "Type est le type de la propriété.\nIl n'est requis que lorsque le système ne parvient pas à interpréter correctement la valeur en fonction du contexte.",
          "type": "string",
          "x-go-name": "Type"
        },
        "value": {
          "description": "Value désigne la valeur de la propriété",
          "type": "object",
          "x-go-name": "Value"
        }
      },
      "x-go-package": "github.com/open-horizon/edge-sync-service/common"
    },
    "SecurityError": {
      "description": "SecurityError est l'erreur relative à l'échec des demandes à cause de la sécurité",
      "type": "object",
      "properties": {
        "Message": {
          "type": "string"
        }
      },
      "x-go-package": "github.com/open-horizon/edge-sync-service/common"
    },
    "ServiceID": {
      "description": "ServiceID contient l'ID d'un service pour lequel un objet peut avoir une affinité",
      "type": "object",
      "properties": {
        "arch": {
          "description": "Arch est l'architecture du service",
          "type": "string",
          "x-go-name": "Arch"
        },
        "orgID": {
          "description": "OrgID est l'ID d'organisation du service",
          "type": "string",
          "x-go-name": "OrgID"
        },
        "serviceName": {
          "description": "ServiceName est le nom du service",
          "type": "string",
          "x-go-name": "ServiceName"
        },
        "version": {
          "description": "Version est la version du service",
          "type": "string",
          "x-go-name": "Version"
        }
      },
      "x-go-package": "github.com/open-horizon/edge-sync-service/common"
    },
    "StoredOrganization": {
      "description": "StoredOrganization contient l'organisation et l'horodatage de sa mise à jour",
      "type": "object",
      "properties": {
        "Org": {
          "$ref": "#/definitions/Organization"
        },
        "Timestamp": {
          "type": "string",
          "format": "date-time"
        }
      },
      "x-go-package": "github.com/open-horizon/edge-sync-service/common"
    },
    "SyncServiceVersion": {
      "description": "SyncServiceVersion représente la version actuelle du service de synchronisation",
      "type": "object",
      "properties": {
        "Major": {
          "type": "integer",
          "format": "uint32"
        },
        "Minor": {
          "type": "integer",
          "format": "uint32"
        }
      },
      "x-go-package": "github.com/open-horizon/edge-sync-service/common"
    },
    "UsageInfo": {
      "description": "UsageInfo décrit l'utilisation du noeud de service de synchronisation",
      "type": "object",
      "properties": {
        "clientRequests": {
          "type": "integer",
          "format": "uint64",
          "x-go-name": "ClientRequests"
        },
        "registeredESS": {
          "type": "integer",
          "format": "uint32",
          "x-go-name": "RegisteredESS"
        },
        "storedObjects": {
          "type": "integer",
          "format": "uint32",
          "x-go-name": "StoredObjects"
        }
      },
      "x-go-package": "github.com/open-horizon/edge-sync-service/common"
    },
    "bulkACLUpdate": {
      "description": "bulkACLUpdate désigne le contenu utilisé lors d'une mise à jour en bloc sur une ACL (soit en ajoutant les noms d'utilisateur à une\nACL ou en les supprimant).",
      "type": "object",
      "properties": {
        "action": {
          "description": "Action représente l'action d'ajouter ou de supprimer (des noms d'utilisateurs)",
          "type": "string",
          "x-go-name": "Action"
        },
        "usernames": {
          "description": "Usernames est un tableau de noms d'utilisateurs à ajouter à une ACL ou à supprimer d'une ACL selon vos besoins",
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-go-name": "Usernames"
        }
      },
      "x-go-package": "github.com/open-horizon/edge-sync-service/core/base"
    },
    "healthReport": {
      "type": "object",
      "properties": {
        "dbHealth": {
          "$ref": "#/definitions/DBHealthStatusInfo"
        },
        "general": {
          "$ref": "#/definitions/HealthStatusInfo"
        },
        "mqttHealth": {
          "$ref": "#/definitions/MQTTHealthStatusInfo"
        },
        "usage": {
          "$ref": "#/definitions/UsageInfo"
        }
      },
      "x-go-package": "github.com/open-horizon/edge-sync-service/core/base"
    },
    "objectUpdate": {
      "description": "objectUpdate inclut les métadonnées et les données de l'objet\nUn objet de service de synchronisation inclut des métadonnées et éventuellement des données binaires.\nLes métadonnées doivent être renseignées lorsqu'un objet est créé. Les métadonnées et les données peuvent ensuite être mises à jour simultanément ou successivement.",
      "type": "object",
      "properties": {
        "data": {
          "description": "Data désigne les données binaires de l'objet ",
          "type": "array",
          "items": {
            "type": "integer",
            "format": "uint8"
          },
          "x-go-name": "Data"
        },
        "meta": {
          "$ref": "#/definitions/MetaData"
        }
      },
      "x-go-package": "github.com/open-horizon/edge-sync-service/core/base"
    },
    "organization": {
      "description": "L'organisation inclut l'ID de l'organisation et l'adresse du courtier",
      "type": "object",
      "properties": {
        "address": {
          "description": "Adresse du courtier",
          "type": "string",
          "x-go-name": "Address"
        },
        "org-id": {
          "description": "ID d'organisation",
          "type": "string",
          "x-go-name": "OrgID"
        }
      },
      "x-go-package": "github.com/open-horizon/edge-sync-service/core/base"
    },
    "webhookUpdate": {
      "description": "webhookUpdate inclut l'action du webhook et son URL\nUn webhook peut être utilisé pour autoriser le service de synchronisation à appeler des actions lorsque de nouvelles informations deviennent disponibles.\nUne application peut choisir entre l'utilisation d'un webhook et la recherche régulière de mises à jour pour le service de synchronisation.",
      "type": "object",
      "properties": {
        "action": {
          "description": "Action désigne l'action soit d'enregistrer (création/mise à jour d'un webhook), soit de supprimer (suppression du webhook)",
          "type": "string",
          "x-go-name": "Action"
        },
        "url": {
          "description": "URL désigne l'adresse URL à appeler lorsque de nouvelles informations sont disponibles pour l'objet",
          "type": "string",
          "x-go-name": "URL"
        }
      },
      "x-go-package": "github.com/open-horizon/edge-sync-service/core/base"
    }
  }
}
